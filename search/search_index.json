{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":""},{"location":"#introduction","title":"Introduction","text":"<p> Build your own insect-detecting camera trap! </p> <p>This website provides instructions on hardware assembly, software setup, model training and deployment of the Insect Detect camera trap that can be used for automated insect monitoring.</p>"},{"location":"#background","title":"Background","text":"<p>Long-term monitoring data at a high spatiotemporal resolution is essential to investigate potential drivers and their impact on the widespread insect decline (Wagner, 2020), as well as to design effective conservation strategies (Samways et al., 2020). Automated monitoring methods can extend the ecologists' toolbox and acquire high-quality data with less time/labor input compared to traditional methods (Besson et al., 2022). If standardized, easily accessible and reproducible, these methods could furthermore decentralize monitoring efforts and strengthen the integration of independent biodiversity observations (Citizen Science) (K\u00fchl et al., 2020).</p> <p>A range of different sensors can be used for automated insect monitoring (van Klink et al., 2022). These include acoustic (e.g. Kawakita &amp; Ichikawa, 2019) and opto-electronic sensors (e.g. Potamitis et al., 2015; Rydhmer et al., 2022), as well as cameras (overview in H\u00f8ye et al., 2021). Several low-cost DIY camera trap systems for insects use scheduled video or image recordings, which are analyzed in a subsequent processing step (e.g. Droissart et al., 2021; Geissmann et al., 2022). Other systems utilize motion detection software as trigger for the image capture (e.g. Bjerge et al., 2021a; overview in Pegoraro et al., 2020). As for traditional camera traps used for monitoring of mammals, the often large amount of image data that is produced in this way can be most efficiently processed and analyzed by making use of machine learning (ML) and especially deep learning (DL) algorithms (Borowiec et al., 2022) to automatically extract information such as species identity, abundance and behaviour (Tuia et al., 2022).</p> <p>Small DL models with relatively low computational costs can be run on suitable devices on the edge, to enable real-time detection of objects the model was trained on. Bjerge et al. (2021b) developed a camera trap for automated pollinator monitoring, which combines scheduled time-lapse image recordings with subsequent on-device insect detection/classification and tracking implemented during post-processing. The appearance and detection of an insect can be also used as trigger to automatically start a recording. This can drastically reduce the amount of data that has to be stored, by integrating the information extraction into the recording process. The hereafter presented DIY camera trap supports on-device detection and tracking of insects, combined with high-resolution frame synchronization in real time.</p> The necessity of automated biodiversity monitoring <p>\"We believe that the fields of ecology and conservation biology are in the midst of a rapid and discipline-defining shift towards technology-mediated, indirect biodiversity observation. [...] Finally, for those who remain sceptical of the value of indirect observations, it is also useful to remember that we can never predict the advances in methods that may occur in the future. Unlike humans in the field, automated sensors produce a permanent visual or acoustic record of a given location and time that is far richer than a simple note that 'species X was here at time Y'. Similar to museum specimens, these records will undoubtedly be reanalysed by future generations of ecologists and conservation biologists using better tools than we have available now in order to extract information and answer questions that we cannot imagine today. And these future researchers will undoubtedly thank us, as we thank previous generations of naturalists, for having the foresight to collect as many observations as possible of the rapidly changing species and habitats on our planet.\" (Kitzes &amp; Schricker, 2019)</p>"},{"location":"#overview","title":"Overview","text":"The solar-powered DIY camera trap (version 2024) can be used               for continuous automated monitoring of flower-visiting insects <p>The Insect Detect DIY camera trap for automated insect monitoring is composed of low-cost off-the-shelf hardware components, combined with open-source software and can be easily assembled and set up with the provided instructions. The annotated datasets and provided models for insect detection and classification can be used as starting point to train your own models, e.g. adapted to different backgrounds or insect taxa.</p> <p>The use of an artificial platform provides a homogeneous and constant background, which standardizes the visual attraction for insects and leads to higher detection and tracking accuracy with less data required for model training. Because of the flat design, the posture of insects landing on the platform is more uniform, which can lead to better classification results and less images required for model training. In ongoing research efforts, different materials, shapes and colors are tested to enhance the visual attraction for specific pollinator groups.</p> <p>Implemented functions</p> <ul> <li>non-invasive, continuous automated monitoring of flower-visiting insects</li> <li>standardized artificial flower platform as visual attractant</li> <li>on-device detection and tracking in real time with provided YOLO models</li> <li>save images of detected insects cropped from high-resolution frames (4K)</li> <li>low power consumption (~3.8 W) and fully solar-powered</li> <li>automated classification and post-processing in subsequent step on local PC</li> <li>weatherproof enclosures and highly customizable mounting setup</li> <li>easy to build and deploy with low-cost off-the-shelf hardware components</li> <li>completely open-source software with detailed documentation</li> <li>instructions and notebooks to train and deploy custom models</li> </ul> <p>Not implemented (yet)</p> <ul> <li>on-device classification and metadata post-processing</li> <li>remote data transfer (e.g. via NB-IoT or LTE module)</li> </ul> <p>Especially when deploying the camera trap system in new environments, edge cases (low confidence score or false detection/classification) should be identified and models retrained with new data (correctly annotated images). This iterative Active Learning loop of retraining and redeploying can ensure a high detection and classification accuracy over time. With the combination of Roboflow for annotation and dataset management and Google Colab as cloud training platform, this can be achieved in a straightforward way, even without prior knowledge or specific hardware requirements and free of charge.</p> <p> </p> An Active Learning loop can increase detection and classification               accuracy if real-world data is integrated to train new models <p>In the Hardware section of this website, you will find a list with all required components and detailed instructions on how to assemble the camera trap system. Only some standard tools are necessary, which are listed in the Hardware overview.</p> <p>In the Software section, all steps to get the camera trap up and running are explained. You will start with installing the necessary software on your local PC, to communicate with the Raspberry Pi. After the Raspberry Pi is configured, check the usage instructions for information on custom configuration and how to use the scripts for live preview and automated recording.</p> <p>The Model Training section will show you tools to annotate your own images and use these to train your custom object detection models that can be deployed on the OAK-1 camera. To classify the cropped insect images, you can train your custom image classification model in the next step that can be run on your local PC (no GPU necessary). All of the model training can be done in Google Colab, where you will have access to a free cloud GPU for fast training. This means all you need is a Google account, no special hardware is required.</p> <p>The Deployment section contains details about each step of the processing pipeline, from on-device detection and tracking, to classification of the cropped insect images on your local PC and subsequent metadata post-processing of the combined results.</p>"},{"location":"#github-repositories","title":"GitHub repositories","text":"<ul> <li> <p><code>insect-detect</code> </p> <p>YOLO insect detection models and Python scripts for testing and deploying   the Insect Detect DIY camera trap system for automated insect monitoring.</p> <p>Download </p> </li> <li> <p><code>insect-detect-ml</code> </p> <p>Notebooks for object detection and image classification model training.   Insect classification model. Python scripts for data post-processing.</p> <p>Download </p> </li> <li> <p><code>insect-detect-docs</code> </p> <p>Source files and assets of this documentation website, based on   Material for MkDocs.</p> <p>Download </p> </li> <li> <p><code>yolov5</code></p> <p>YOLOv5 fork with modifications to improve classification model training, validation   and prediction. Adapted to data captured with the Insect Detect DIY camera trap.</p> <p>Download </p> </li> </ul>"},{"location":"#datasets","title":"Datasets","text":"<ul> <li> <p>Insect Detection Dataset </p> <p>Dataset to train insect detection models. Contains annotated images collected in 2022   with the DIY camera trap and the first version of the flower platform as background.</p> </li> <li> <p>Insect Classification Dataset </p> <p>Dataset to train insect classification models. Contains images mostly   collected in 2023 with several DIY camera traps.</p> </li> </ul>"},{"location":"#models","title":"Models","text":""},{"location":"#detection-models","title":"Detection models","text":"Model size<sup>(pixels)</sup> mAP<sup>val50-95</sup> mAP<sup>val50</sup> Precision<sup>val</sup> Recall<sup>val</sup> Speed<sup>OAK(fps)</sup> YOLOv5n 320 53.8 96.9 95.5 96.1 49 YOLOv6n 320 50.3 95.1 96.9 89.8 60 YOLOv7tiny 320 53.2 95.7 94.7 94.2 52 YOLOv8n 320 55.4 94.4 92.2 89.9 39 Table Notes <ul> <li>All models were trained to   300 epochs with batch size 32 and default hyperparameters. Reproduce the model training with the provided   Google Colab notebooks.</li> <li>Trained on   Insect_Detect_detection   dataset version 7   with only 1 class (\"insect\").</li> <li>Model metrics (mAP, Precision, Recall) are shown for the original PyTorch (.pt) model before conversion   to ONNX -&gt; OpenVINO -&gt; .blob format. Reproduce metrics by using the respective model validation method.</li> </ul>"},{"location":"#classification-model","title":"Classification model","text":"Model<sup>(.onnx)</sup> size<sup>(pixels)</sup> Top1 Accuracy<sup>test</sup> Precision<sup>test</sup> Recall<sup>test</sup> F1 score<sup>test</sup> EfficientNet-B0 128 0.972 0.971 0.967 0.969 Table Notes <ul> <li>The model   was trained to 20 epochs with image size 128, batch size 64 and default   settings and hyperparameters. Reproduce the model training with the provided   Google Colab notebook.</li> <li>Trained on Insect Detect - insect classification dataset v2   with 27 classes. To reproduce the dataset split, keep the default settings in the Colab notebook   (train/val/test ratio = 0.7/0.2/0.1, random seed = 1).</li> <li>Dataset can be explored at Roboflow Universe.   Export from Roboflow compresses the images and can lead to a decreased model accuracy.   It is recommended to use the uncompressed dataset from Zenodo.</li> <li>Full model metrics are available in the <code>insect-detect-ml</code>   GitHub repo.</li> </ul> The classification model includes 22 insect taxa/groups, one class for               \"other\" arthropods and four classes for non-arthropod detections"},{"location":"#licenses","title":"Licenses","text":"<p>This documentation website and its content is licensed under the terms of the Creative Commons Attribution-ShareAlike 4.0 International License (CC BY-SA 4.0).</p> <p>Resources from the <code>insect-detect</code> GitHub repository are licensed under the terms of the GNU General Public License v3.0 (GNU GPLv3).</p> <p>Resources from the <code>insect-detect-ml</code> GitHub repository and <code>yolov5</code> fork are licensed under the terms of the GNU Affero General Public License v3.0 (GNU AGPLv3).</p>"},{"location":"#citation","title":"Citation","text":"<p>If you use resources from this project, please cite our paper:</p> <pre><code>Sittinger M, Uhler J, Pink M, Herz A (2024) Insect detect: An open-source DIY camera trap for automated insect monitoring. PLOS ONE 19(4): e0295474. https://doi.org/10.1371/journal.pone.0295474\n</code></pre>"},{"location":"deployment/classification/","title":"Classification","text":""},{"location":"deployment/classification/#deployment-classification","title":"Deployment: Classification","text":"<p>The recommended processing pipeline uses a detection model with only one generic class (\"insect\"). The low input resolution enables a high inference speed, which is necessary to reliably track moving/flying insects. Images of the detected and tracked insects are cropped from synchronized HQ frames in real time.</p> <p>By using the provided recording script, for automated monitoring, cropped detections of individual insects are saved as .jpg files and relevant metadata is saved to .csv for each recording session. The insect images can be classified in a subsequent step on your local PC, by using a classification model exported to ONNX format for faster CPU inference. The classification results are added to the merged metadata .csv files for post-processing in the last step.</p>"},{"location":"deployment/classification/#installation","title":"Installation","text":"<p>If you followed the steps in Local Setup, you already have Python installed on your computer.</p> Recommended: Set up an isolated Python environment <p>You can create a virtual environment  before installing the required packages for YOLOv5 to avoid version and dependency  conflicts of the packages, especially if you are working on different Python projects.</p> <ul> <li> <p>Install <code>virtualenv</code>:</p> <pre><code>py -m pip install virtualenv\n</code></pre> </li> <li> <p>Navigate to the <code>YOLOv5-cls</code> folder:</p> <pre><code>cd YOLOv5-cls\n</code></pre> </li> <li> <p>Create a new Python environment (folder in your current directory):</p> <pre><code>py -m virtualenv env_yolov5\n</code></pre> </li> <li> <p>Activate the environment by running:</p> <pre><code>.\\env_yolov5\\Scripts\\activate\n</code></pre> <p>If you cannot run the activate script because of your Execution Policy  settings, open a new PowerShell as administrator and run the following:</p> <pre><code>Set-ExecutionPolicy RemoteSigned\n</code></pre> <p>You can find more info here  and here.</p> </li> <li> <p>Now all packages will be installed only in the virtual environment,    which you have to activate everytime you want to run a script that    depends on these packages.</p> </li> <li> <p>You can deactivate the virtual environment by running:</p> <pre><code>deactivate\n</code></pre> </li> </ul> <ul> <li>Create the new folder <code>C:\\Users\\&lt;username&gt;\\YOLOv5-cls</code>.</li> <li>Download   the custom <code>yolov5</code> fork   and extract it to the <code>YOLOv5-cls</code> folder.</li> <li> <p>Open a new Terminal (PowerShell) and navigate to the <code>YOLOv5-cls</code> folder:</p> <pre><code>cd YOLOv5-cls\n</code></pre> </li> <li> <p>Update <code>pip</code>:</p> <pre><code>py -m pip install --upgrade pip\n</code></pre> </li> <li> <p>Install the required packages by running:</p> <pre><code>py -m pip install -r yolov5-master/requirements.txt\n</code></pre> <p>If you are running the image classification on a computer with CUDA-enabled GPU, please edit the <code>requirements.txt</code> file and change <code>onnxruntime</code> to <code>onnxruntime-gpu</code> before installing the packages.</p> </li> </ul>"},{"location":"deployment/classification/#run-image-classification","title":"Run image classification","text":"<p>We will use the modified <code>classify/predict.py</code> script from the custom <code>yolov5</code> repo together with the provided classification model to classify all insect images in the <code>insect-detect/data</code> folder (camera trap output) and add the prediction results to the merged metadata .csv files.</p> <ul> <li>Download   the <code>insect-detect-ml</code>   repo and extract it to the <code>YOLOv5-cls</code> folder.</li> <li>Copy your <code>insect-detect/data</code> folder,   saved   from the Raspberry Pi's SD card to the <code>YOLOv5-cls</code> folder. Make sure that   only cropped detections are present! If you additionally saved full   HQ frames, delete them before running the classification script.</li> <li> <p>Navigate to the <code>YOLOv5-cls</code> folder and start the classification script by running:</p> <pre><code>py yolov5-master/classify/predict.py --name camtrap1 --source \"insect-detect/data/**/\" --weights \"insect-detect-ml-main/models/efficientnet-b0_imgsz128.onnx\" --img 128 --sort-top1 --sort-prob --concat-csv --crops-only\n</code></pre> <p>Change the <code>--name</code> of your prediction run accordingly, e.g. by including information about the camera trap location and collection date of the images. Instead of copying the <code>insect-detect/data</code> folder to the <code>YOLOv5-cls</code> folder, you can also insert its full path after <code>--source</code>.</p> Optional arguments <ul> <li><code>--sort-top1</code> sort images to folders with predicted top1 class as folder name   and do not write results on to image as text (which is the default configuration)</li> <li><code>--sort-prob</code> sort images first by probability and then by top1 class   (requires <code>--sort-top1</code>)</li> <li><code>--concat-csv</code> concatenate all metadata .csv files and   append classification results to new columns</li> <li><code>--crops-only</code> only process images with <code>crop</code> in filename</li> </ul> Image Not Found <p>While running the classification script, in some cases you might run into the following error:</p> <pre><code>AssertionError: Image Not Found &lt;image path&gt;\n</code></pre> <p>This error can be caused by corrupt .jpg images, that are rarely generated during image capture. Run the <code>process_images.py</code> script to find corrupt images in the data folder and move them to a new folder with:</p> <pre><code>py insect-detect-ml-main/process_images.py -source \"insect-detect/data\"\n</code></pre> <p>After removing the corrupt .jpg images, the classification script should now run without throwing an error.</p> </li> </ul> <p>All results are saved to <code>yolov5-master/runs/predict-cls/{name}</code>. The <code>*metadata_classified.csv</code> still contains multiple rows for each tracked insect (= <code>track_ID</code>). During post-processing in the last step, the respective class with the highest weighted probability is calculated for each tracked insect. This will create the final .csv file, in which each row corresponds to an individual tracked insect.</p> <p>If you used <code>--sort-top1</code> as optional argument, the insect images are sorted to folders with the predicted top1 class as folder name. This allows for a quick identification of edge cases and these images can be used to retrain your classification model. By using <code>--sort-prob</code> additionally, the images are sorted by top1 probability first and then by top1 class. This can give you more information about cases where the model is unsure about its prediction. Adding images with a low probability to your training dataset can increase classification accuracy over time.</p>"},{"location":"deployment/detection/","title":"Detection","text":""},{"location":"deployment/detection/#deployment-detection","title":"Deployment: Detection","text":"<p>One of the biggest challenges for automated insect monitoring by running model inference on devices with relatively low computational power, is to find the right balance between speed (fps) and accuracy of the detection and classification results. A high speed or image throughput is necessary for the object tracker to work correctly, as it depends on the information (bounding box coordinates) coming from the detection model. If the speed (fps) of the model output is too low, fast moving insects can not be properly tracked, which will lead to \"jumping\" tracking IDs and thereby multiple counting of a single individual.</p> <p>Model speed can be increased by choosing small models with fewer parameters (e.g. YOLOv5n) and decreasing the resolution of frames that are used as input for the model (e.g. 320x320 pixel). However, the reduced image resolution can significantly decrease the detection and especially classification accuracy. This effect is even stronger when dealing with very small objects like insects.</p> <p>A possible solution to this problem could be to use a smaller field of view (FOV), e.g. by using a small flower platform and short distance between platform and camera. This would however decrease the efficiency of the visual attraction and fewer insects could be recorded in the same time frame. In the following, an alternative approach to this problem is proposed.</p>"},{"location":"deployment/detection/#processing-pipeline","title":"Processing pipeline","text":"<p>The OAK-1 camera and DepthAI Python API make it possible to run a low-quality (LQ) stream (e.g. 320x320 px) in parallel with a high-quality (HQ) stream (e.g. 3840 x 2160 px) and synchronize the detections made on the LQ stream with the frames from the HQ stream on-device. This approach enables the use of the LQ stream as input for a YOLO detection model to increase the possible inference speed, which in turn also increases the performance and accuracy of the object tracker.</p> <p> </p> HQ frames are downscaled and used as model input, while detections are               synchronized with and cropped from HQ frames to be saved to the RPi SD               card together with all relevant metadata <p>As the insects in these LQ frames often miss visual features that would be important for a good classification accuracy, it is recommended to use only one generic class (\"insect\") for the detection model training and inference. To still be able to classify the detected insects in a subsequent step, the detections (= bounding box coordinates) and tracklets (= tracking ID) are synchronized with the HQ stream in real time on-device. In this way it is possible to crop the detected insects (area of the bounding box) from the HQ frames and save them as individual .jpg files (e.g. every second). The cropped detections have a high enough resolution for accurate classification in a subsequent step on your local PC.</p> <p></p> <p>Separating the detection and classification steps can also simplify dataset management, annotation and model training. Overall less training data is sufficient for good detection results, as no classes have to be distinguished by the detection model. You can directly use the cropped detections as input for a growing image dataset to train new insect classification models, just by sorting them to folders with the respective class name (e.g. insect taxon).</p>"},{"location":"deployment/detection/#metadata-csv","title":"Metadata .csv","text":"<p>For each cropped detection that is saved to .jpg, a new row with relevant metadata is appended to a metadata .csv file that is created for each recording event. This metadata includes:</p> <ul> <li><code>rec_ID</code>, calculated with the number of already existing recording folders   to distinguish each recording event. This is important, as the unique   tracking IDs will restart from 1 for each recording interval and the metadata   .csv files will be merged during the automated   classification step.</li> <li><code>timestamp</code> with exact recording time.</li> <li><code>label</code> is negligible if a detection model with only one class is used, but   enables the deployment of a multi-class detection model.</li> <li><code>confidence</code> score can be used to evaluate the quality of the detection   results, e.g. to find examples where the model is uncertain or to filter only   detections above a specific confidence score threshold.</li> <li><code>track_ID</code> that is assigned by the object tracker node to each individual   insect. As cropped detections are saved in short time intervals (e.g. every   second), many images can exist of an individual tracked insect, dependent on   its duration of stay on the flower platform. All of these images are classified   in the next step and the class with the   highest weighted probability is then calculated in the final step by using the   <code>process_metadata.py</code> script.</li> <li><code>x_min</code>, <code>y_min</code>, <code>x_max</code>, <code>y_max</code> relative bounding box coordinates.   These coordinates make it possible to calculate the relative bounding box   size. If the absolute frame dimensions (e.g. size of the flower platform in mm)   are used as argument for the   <code>process_metadata.py</code>   script, the absolute average bounding box size in mm is calculated for each detection.</li> <li><code>file_path</code> to the cropped detection, saved as .jpg.</li> </ul> rec_ID timestamp label confidence track_ID x_min y_min x_max y_max file_path 1 20221201_16-41-02.393074 insect 0.87 1 0.5647 0.5357 0.6321 0.6132 ./insect-detect/data/20221201/20221201_16-40/cropped/insect/20221201_16-41-02.393074_1_cropped.jpg"},{"location":"deployment/post-processing/","title":"Post-Processing","text":""},{"location":"deployment/post-processing/#deployment-post-processing","title":"Deployment: Post-Processing","text":"<p>As the <code>*metadata_classified.csv</code> file, generated during the classification step, still contains multiple rows for each tracked insect (= <code>track_ID</code>), we will use the <code>process_metadata.py</code> script for metadata post-processing.</p> <p>The output of the script includes a <code>*top1_final.csv</code> file in which each row corresponds to an individual tracked insect and its classification result with the highest weighted probability.</p>"},{"location":"deployment/post-processing/#installation","title":"Installation","text":"<p>It is assumed that you already followed the instructions in the classification step and successfully ran the <code>classify/predict.py</code> script to classify the cropped insect images and write the classification results to <code>*metadata_classified.csv</code>.</p> <ul> <li>Navigate to the <code>YOLOv5-cls</code> folder, in which you downloaded the   <code>insect-detect-ml</code> repo.</li> <li> <p>Install the required packages by running:</p> <pre><code>py -m pip install -r insect-detect-ml-main/requirements.txt\n</code></pre> </li> </ul>"},{"location":"deployment/post-processing/#run-metadata-post-processing","title":"Run metadata post-processing","text":"<ul> <li> <p>Navigate to the <code>YOLOv5-cls</code> folder and start the post-processing script by running:</p> <pre><code>py insect-detect-ml-main/process_metadata.py -source \"yolov5-master/runs/predict-cls/&lt;NAME&gt;/results\" -size 350 200 -images 3 1800\n</code></pre> <p>Insert the correct name of your prediction run at <code>&lt;NAME&gt;</code>. If you used a platform with a different size as the small platform (350x200 mm), change <code>-size</code> to your frame width + hight in mm accordingly.</p> Optional arguments <ul> <li><code>-source</code> set path to directory containing metadata             .csv file(s) with classification results</li> <li><code>-size</code> set absolute frame width and height in mm to calculate           true bbox size (default: relative bbox size)</li> <li><code>-images</code> remove tracking IDs with less or more             than the specified number of images</li> <li><code>-duration</code> remove tracking IDs with less or more               than the specified duration in seconds</li> </ul> </li> </ul> <p>When using the default capture frequency of one second, it is highly recommended to use <code>-images 3 1800</code> to remove all tracked insects (= <code>track_ID</code>) with less than 3 or more than 1800 images before saving the <code>*top1_final.csv</code>.</p> <p>This can exclude many false tracking IDs, e.g. insects moving too fast to be correctly tracked (\"jumping\" IDs) or objects that are lying on the platform and are incorrectly detected as insects. Depending on the speed and accuracy of the deployed detection model, as well as the capture frequency and respective recording duration, adjusting these thresholds or using the <code>-duration</code> argument instead, can result in a more accurate estimation of insect abundance/activity (= platform visits).</p>"},{"location":"deployment/post-processing/#overview-plots","title":"Overview plots","text":"<p>Several plots are generated by the <code>process_metadata.py</code> script that can give a first overview of the post-processed metadata. For more in-depth statistics, the final .csv file should be analyzed with software such as R + RStudio.</p> <p>The plot <code>top1_mean_det_conf.png</code> can be used to find cases (e.g. small beetles in the following example) for which the deployed detection model has a low confidence score and additional annotated images could increase model accuracy.</p> <p></p> <p>The plot <code>rec_id_top1.png</code> gives a overview of the top1 classes per recording. In the following example, lower numbers of insects at recordings early in the day can be noticed. Also an increase of images classified as dirt (<code>none_dirt</code>) can be observed in later recordings.</p> <p></p> <p>The plot <code>track_images.png</code> gives you information about the distribution of the number of images (= tracking duration) per tracking ID. It is recommended to remove all tracked insects with less than 3 or more than 1800 images before saving the final .csv file. You can also run the <code>process_metadata.py</code> script without the argument <code>-images</code> or <code>-duration</code> to plot all tracking IDs and include them in the final .csv file.</p> <p></p> <p>To find cases where the accuracy of the classification model could be improved by retraining with additional images added to the basic dataset, you can inspect the plots <code>top1_prob.png</code> and <code>top1_prob_mean.png</code>. In the following example, a relatively low classification probability can be noticed for the classes <code>hfly_myathr</code> (but also only few images), <code>hfly_eristal</code>, <code>beetle</code> and <code>bee_apis</code>. The classified and sorted images in the folder <code>top1_classes</code> should be inspected in cases of such low probabilities to find false classification results.</p> <p></p> <p></p>"},{"location":"hardware/","title":"Hardware","text":""},{"location":"hardware/#hardware","title":"Hardware","text":"Camera Trap Versions <p>In the following sections, you will find instructions for both the Insect  Detect camera trap version 2024 and version 2023. While the corresponding  paper is  based on version 2023, it is highly recommended to follow the instructions  for the optimized version 2024 if you want to reproduce our hardware design.  Version 2023 can be considered as deprecated, its documentation won't be  updated anymore and is only kept for archiving and reference purposes.</p> <p>In this first main section, you will find detailed instructions on how to build your own weatherproof and solar-powered camera trap with automated real-time insect detection and tracking. In the Components section, all required parts are listed, including example product links. You will also need some tools and equipment, which are shown in the Overview section of the building instructions. If you don't own these tools yourself, you could borrow them from someone or go to your local Fablab/Makerspace, where all required tools should be available.</p> <p>We will start with the Enclosure Preparation, where all of the electronic parts will be mounted inside to protect them from weather and humidity. In the next step, we are going to integrate the hardware into the enclosures. For the Full Setup, we will prepare everything for mounting the camera trap in the last section. In the Field Deploment section, all steps to set up the finished camera trap in the field are shown.</p> Disclaimer <p>Every effort has been made to check the instructions for accuracy and completeness. However, the author cannot be held responsible for any errors or omissions. The readers remain responsible for their safety when using the tools, hardware and software described in the instructions for building and deploying the Insect Detect camera trap. The readers must also comply with all applicable laws and regulations regarding the deployment of the camera trap system including the associated software and deep learning models. The author of these instructions cannot be held responsible for the results of action, inaction, or otherwise taken as a consequence of the information provided in the instructions. All products, brands and product links to any online shops are mentioned for illustration purposes only and do not denote a commercial relationship between the author and the products/brands/shops.</p> <p> </p> Insect Detect DIY camera trap (version 2024) mounted with platform <p> </p> Insect Detect DIY camera trap (version 2024) mounted on flower"},{"location":"hardware/2024_buildinstructions_enclosures/","title":"Enclosure Preparation","text":""},{"location":"hardware/2024_buildinstructions_enclosures/#enclosure-preparation","title":"Enclosure Preparation","text":"Required Tools &amp; Components <p>Tools</p> <ol> <li>Printer</li> <li>Scissors</li> <li>Adhesive Tape</li> <li>Nail/Screw &amp; Hammer</li> <li>Pointed Tool (e.g. from multi-tool knife)</li> <li>Drilling Machine</li> <li>Drill Press (recommended if available)</li> <li>Bench Vise (recommended if available)</li> <li>Metal Step Drill Bit (with 20 mm step) - for M20 Cable Glands</li> <li>Forstner Bit or similar (19 mm) - for LED Button</li> <li>Metal Drill Bit (4 mm + 6 mm) - for Enclosures, HPL Sheets and Aluminium Square Tube</li> <li>Wood Drill Bit (3 mm + 4 mm) - for Mounting Plates</li> <li>Allen Key (3 mm)</li> <li>Pliers</li> <li>Microfiber Cloth</li> </ol> <p>Components</p> <ol> <li>Bocube Enclosure B 221309 PC-V0 (= Electronics Enclosure)</li> <li>Euromas Enclosure M 215 G (= Camera Enclosure)</li> <li>2x Bocube Mounting Plate B M 2213</li> <li>Euromas Mounting Plate M 215</li> <li>HPL Sheet, 3 mm (10x20 cm)</li> <li>HPL Sheet, 3 mm (12x24 cm)</li> <li>Alu Square Tube, 13.5 mm (120 mm)</li> <li>6x Screw M4, internal hexagon (16 mm)</li> <li>2x Screw M4, internal hexagon (30 mm)</li> <li>16x Hex Nut M4, flat</li> <li>8x Washer (4.3x15x1 mm)</li> <li>Screen Protector (~7x9 cm)</li> </ol>"},{"location":"hardware/2024_buildinstructions_enclosures/#1-print-drilling-templates","title":"1 Print Drilling Templates","text":"<p>We will use printouts of the PDF templates to mark the positions of the holes to drill. Download the <code>insect-detect-docs</code> repo and go to <code>PDF_templates/drilling_templates/version_2024</code>. Print all PDF templates in original size and cut them out. We will attach them to the enclosures, mounting plates, HPL sheets and aluminium square tube in the next step.</p> <p>Actual size</p> <p>Make sure to select <code>Actual size</code> for printing the templates in their original size.</p>"},{"location":"hardware/2024_buildinstructions_enclosures/#2-mark-hole-positions","title":"2 Mark Hole Positions","text":"<p>Use a small strip of adhesive tape on each side to fix the drilling templates to the enclosures, mounting plates, HPL sheets and aluminium square tube as precise as possible.</p> <p></p> <p></p> <p></p> <p>Position a nail or screw in the center point of each green circle and hit it lightly with a hammer to mark the drill holes (recommended for mounting plates, HPL sheets and aluminium square tube).</p> <p></p> <p>Use a different pointed tool and push it carefully but with sufficient pressure through the template (recommended for enclosures).</p> <p></p> <p>Remove the template printouts after marking all holes and keep them as reference for the respective diameters while drilling.</p>"},{"location":"hardware/2024_buildinstructions_enclosures/#3-drill-holes","title":"3 Drill Holes","text":""},{"location":"hardware/2024_buildinstructions_enclosures/#31-enclosures","title":"3.1 Enclosures","text":"<p>You will need a 6 mm metal drill bit (hole for ventilation plug), a step drill bit with 20 mm step (holes for M20 cable glands), and a 19 mm forstner bit or similar (hole for optional LED button). It is recommended to secure the enclosures in a bench vise while drilling. Drill a small hole (~3 mm) at the marked position for the LED button before using the forstner bit to keep it in position.</p> <p></p> <p></p>"},{"location":"hardware/2024_buildinstructions_enclosures/#32-mounting-plates","title":"3.2 Mounting Plates","text":"<p>You will need a 3 mm and a 4 mm wood drill bit for the mounting plates. If available, use a drill press to drill the holes more accurately.</p> <p></p>"},{"location":"hardware/2024_buildinstructions_enclosures/#33-hpl-sheets","title":"3.3 HPL Sheets","text":"<p>Continue with 5 Apply Screen Protector if you are using your own custom mounting solution!</p> <p>You will need a 4 mm metal drill bit for the HPL sheets. Drill rather slow, as the bit and sheet could overheat otherwise (stop if you see smoke).</p> <p></p>"},{"location":"hardware/2024_buildinstructions_enclosures/#34-square-tube","title":"3.4 Square Tube","text":"<p>You will need a 4 mm metal drill bit for the aluminium square tube. Drill slowly, to avoid overheating. Drill the 4 mm holes through both sides of the tube.</p> <p></p>"},{"location":"hardware/2024_buildinstructions_enclosures/#4-attach-hpl-sheets","title":"4 Attach HPL Sheets","text":"<p>Attach the HPL sheets to both enclosures now, as it would be more difficult later on when the hardware is already integrated.</p>"},{"location":"hardware/2024_buildinstructions_enclosures/#41-electronics-enclosure","title":"4.1 Electronics Enclosure","text":"<p>We will start with attaching the 12x24 cm HPL sheet to the larger electronics enclosure.</p> <p> Allen Key (3 mm), Pliers</p> <p> 8x Hex Nut M4, 4x Washer, 4x Screw M4 (16 mm)</p> <p> HPL Sheet (12x24 cm) with drilled holes</p> <p> Bocube Enclosure B 221309 PC-V0 with drilled holes (lid removed)</p> <p></p> <p>Drop one of the M4 16 mm screws into each hole in the corners of the enclosure. Shake the enclosure for the screw to completely slide through the hole or use the allen key to guide it.</p> <p></p> <p>While holding the screws in place with the allen key, fix them to the enclosure with one M4 nut each. Don't fasten the nuts too tight yet, we will do this in the next step.</p> <p></p> <p>The enclosure should now look like in the following image, with all four screws securely attached, but not yet fastened tightly.</p> <p></p> <p>Push the HPL sheet onto the four screws and press it down, to make it sit flush on top of the nuts. If this is difficult, loosen one or several of the nuts, to be able to adjust the screws to the holes in the HPL sheet.</p> <p></p> <p>When everything is in place, use the allen key to fasten the screws + nuts, while pressing against the HPL sheet from the other side.</p> <p></p> <p>Put the four washers onto the screws and then use pliers to fasten the remaining four nuts tightly. The HPL sheet is now securely fixed to the electronics enclosure for mounting later on, while enabling airflow between enclosure and HPL sheet for better heat dissipation.</p> <p></p>"},{"location":"hardware/2024_buildinstructions_enclosures/#42-camera-enclosure","title":"4.2 Camera Enclosure","text":"<p>In this step, we will attach the 10x20 cm HPL sheet to the smaller camera enclosure.</p> <p> HPL Sheet (10x20 cm) with drilled holes</p> <p> Euromas Enclosure M 215 G with drilled holes (lid removed)</p> <p> 8x Hex Nut M4, 4x Washer, 4x Screw M4 (2x 16 mm + 2x 30 mm)</p> <p> Allen Key (3 mm), Pliers</p> <p></p> <p>Drop the two M4 30 mm screws into the corner holes on the side of the enclosure where you drilled the 20 mm hole (these will be used to attach the platform frame later on). Drop the two M4 16 mm screws into the corner holes on the opposite side of the enclosure. Shake the enclosure for the screws to completely slide through the holes or use the allen key to guide them.</p> <p>While holding the screws in place with the allen key, fix them to the enclosure with one M4 nut each. Don't fasten the nuts too tight yet, we will do this in the next step.</p> <p></p> <p>The enclosure should now look like in the following image, with all four screws securely attached, but not yet fastened tightly.</p> <p></p> <p>Make sure that the side of the HPL sheet with the 4 mm hole in the middle is located at the side of the enclosure with the 20 mm hole and longer screws. Push the HPL sheet onto the four screws and press it down, to make it sit flush on top of the nuts. If this is difficult, loosen one or several of the nuts, to be able to adjust the screws to the holes in the HPL sheet.</p> <p></p> <p>When everything is in place, use the allen key to fasten the screws + nuts, while pressing against the HPL sheet from the other side.</p> <p>Put the four washers onto the screws and then use pliers to fasten the remaining four nuts tightly. The HPL sheet is now securely fixed to the camera enclosure for mounting later on, while enabling airflow between enclosure and HPL sheet for better heat dissipation.</p> <p></p>"},{"location":"hardware/2024_buildinstructions_enclosures/#5-apply-screen-protector","title":"5 Apply Screen Protector","text":"<p>To make the clear lid of the camera enclosure scratch resistant, we will apply a screen protector. The protector doesn't have to fit perfectly, but should cover the OAK camera lens completely.</p> <p>Clean the clear lid thoroughly with a microfiber cloth. Follow the instructions that came with your screen protector to avoid bubbles forming between lid and film.</p> <p></p> <p></p>"},{"location":"hardware/2024_buildinstructions_hardware/","title":"Hardware Integration","text":""},{"location":"hardware/2024_buildinstructions_hardware/#hardware-integration","title":"Hardware Integration","text":"Required Tools &amp; Components <p>Tools</p> <ol> <li>Soldering Iron (+ Solder)</li> <li>Mounting Putty (e.g. patafix or Blu Tack)</li> <li>Crosshead Screwdrivers (small for M2.5 screws + large for enclosure screws)</li> <li>Flathead Screwdriver (to open electronics enclosure lid)</li> <li>Pliers</li> <li>Scissors</li> <li>Wire Stripper Tool (or scissors if not available)</li> </ol> <p>Components</p> <ol> <li>Electronics Enclosure (with drilled holes)</li> <li>2x Mounting Plate Electronics Enclosure (with drilled holes)</li> <li>2x Mounting Plate Screw Set B M-SHR</li> <li>Raspberry Pi Zero 2 WH</li> <li>Raspberry Pi CPU Heatsink</li> <li>Raspberry Pi Stacking GPIO Header</li> <li>Micro-USB to USB-A Adapter</li> <li>Witty Pi 4 L3V7</li> <li>Single Row Pin Header, angled (7 pins)</li> <li>4x Standoff M2.5, female-male (5 mm)</li> <li>4x Standoff M2.5, female-female (11-12 mm)</li> <li>8x Screw M2.5 (5 mm)</li> <li>Li-Ion Battery Pack 3.7V (4400mAh)</li> <li>Voltaic V75 USB Battery Pack + USB-C Cable</li> <li>8x Cable Tie, 3.6 mm (length: 250+ mm)</li> <li>2x Binding Wire (e.g. from OAK/Voltaic USB cables)</li> <li>2x Silica Gel Pack (5 g)</li> <li>4x Jumper Wire, 1-2 female ends (20 cm)</li> <li>4x WAGO Inline Splicing Connector</li> <li>LED Push Button (3V) + Socket</li> <li>2x Cable Gland MBF 20-RJ45</li> <li>2x Cable Gland Counter Nut M20</li> <li>2x Cable Gland Sealing Ring M20</li> <li>2x Ventilation Plug M6</li> <li>Cable Gland M20</li> <li>Cable Gland Counter Nut M20</li> <li>Cable Gland Sealing Ring M20</li> <li>Voltaic 3.5x1.1mm USB-C Adapter</li> <li>Voltaic 3.5x1.1mm Cable (30 cm)</li> <li>Camera Enclosure (with drilled holes)</li> <li>Mounting Plate Camera Enclosure (with drilled holes)</li> <li>OAK-1 (Auto-Focus) + USB-C Cable</li> <li>2x Screw M4, internal hexagon (16 mm)</li> <li>2x Hex Nut M4, flat</li> </ol>"},{"location":"hardware/2024_buildinstructions_hardware/#1-electronics-enclosure","title":"1 Electronics Enclosure","text":"<p>We will start with integrating the hardware into the larger electronics enclosure. Don't connect the lid yet, as we will do this later on when everything is in place.</p> Electronics enclosure with fully integrated hardware"},{"location":"hardware/2024_buildinstructions_hardware/#11-solder-headers","title":"1.1 Solder Headers","text":"<p>If you don't already have a Raspberry Pi Zero 2 WH with attached header, you will have to solder a header to it. Stick the heatsink on the CPU of your Raspberry Pi to keep the header sitting flush as you solder it. If this is your first time soldering, you can find detailed instructions here. As an alternative to soldering the header, you could also use a Hammer Header.</p> <p>If you want to use the LED button, you will need to solder a 7-pin angled header to the Witty Pi 4 L3V7 to connect the LED button to it. Break off seven connected pins from the angled single row pin header with pliers. Use some kind of mounting putty (e.g. patafix or Blu Tack) to hold the Witty Pi board and the 7-pin header in place while soldering.</p> <p></p>"},{"location":"hardware/2024_buildinstructions_hardware/#12-bottom-mounting-plate","title":"1.2 Bottom Mounting Plate","text":"<p>In this step, we will mount the Raspberry Pi Zero 2 WH, Witty Pi 4 L3V7 and the 3.7V Li-Ion battery pack to the bottom mounting plate of the electronics enclosure.</p> <p> Bocube Mounting Plate B M 2213 (bottom) with drilled holes</p> <p> Raspberry Pi Zero 2 WH (+ header and attached heatsink)</p> <p> Stacking GPIO Header</p> <p> Witty Pi 4 L3V7 (+ 7-pin angled header to connect LED button)</p> <p> 4x Standoff M2.5 female-male (5 mm), 4x Standoff M2.5 female-female (11-12 mm), 8x Screw M2.5 (5 mm)</p> <p> Small Crosshead Screwdriver (not shown in image)</p> <p></p> <p>Push the stacking header on the GPIO header of the Raspberry Pi and make sure that it sits flush.</p> <p></p> <p></p> <p>Push the M2.5 screws through the four smaller 3 mm holes in the mounting plate. While holding the screws in place, fix the 5 mm standoffs to the plate from the other side. Don't fasten them too tight yet, we will do this later.</p> <p></p> <p></p> <p>Place the Raspberry Pi on the standoffs with the stacking header facing the four holes at the edge and make sure that it sits flush. If it doesn't fit, loosen one or several of the standoffs and adjust their position, until the Raspberry Pi slides onto them.</p> <p></p> <p>Screw all four 11 (or 12) mm female-female standoffs onto the 5 mm standoffs.</p> <p></p> <p>Push the Witty Pi board onto the stacking header. You will have to use a little bit of force, but be careful to push only at the corners of the board without touching the electronic components.</p> <p></p> <p>The Witty Pi board should ideally sit flush on the stacking header as shown in the following image. If you used 12 mm instead of 11 mm standoffs or a different kind of stacking header, the GPIO pins might be a little bit exposed under the Witty Pi board which is okay.</p> <p></p> <p>Use the remaining four M2.5 screws to fasten the Witty Pi to the Raspberry Pi. Turn the mounting plate and also fasten the screws at the underside tightly.</p> <p></p> <p>Next, we will fix the battery pack to the mounting plate.</p> <p></p> <p>Push the cable ties through the 4 mm holes at the edge of the plate, with the opening of the head oriented towards the Witty Pi. Then push them through the other two holes from underneath the plate. Align the position of the cable tie heads with the height of the battery pack (~4 cm).</p> <p></p> <p>Place the battery pack between the cable ties with the cable oriented towards the white connector on the Witty Pi and align it with both boards. Fasten the cable ties, while holding the battery pack in an upright position.</p> <p></p> <p>Cut off the protruding ends of the cable ties. Connect the battery pack cable to the Witty Pi. Optionally, put the cable behind the cable tie head for cleaner cable management.</p> <p></p> <p>To attach the silica gel pack to the mounting plate, it is recommended to use something that can be easily reopened to replace a saturated pack with a new one (e.g. releasable cables ties).</p> <p>In our example, we will reuse the black binding wires that came with the USB cables of the OAK camera and V75 battery (keep the second one for the camera enclosure). Push both ends of one wire through the two remaining holes from underneath the plate and slightly twist them for fixing. Use the wire to attach the silica gel pack to the mounting plate only shortly before field deployment to keep it as effective as possible.</p> <p></p> <p></p>"},{"location":"hardware/2024_buildinstructions_hardware/#13-led-button","title":"1.3 LED Button","text":"<p>Continue with 1.4 Cable Glands + Vent Plug if you are not using the LED Button!</p> <p>We will start by preparing the jumper wires that we are going to use in the next steps to connect the LED button to the Witty Pi and Raspberry Pi. The jumper wires come in different colors which can be used for orientation. Strip off two strands of two still connected wires.</p> <p></p> <p>Cut off the connectors at one end of the wire, while keeping the female connectors.</p> <p></p> <p>For the next step, you will need to strip about 1 cm of the insulation from the wires. You can do this carefully with normal scissors or use a specific wire stripper tool.</p> <p></p> <p>Remove about 1 cm of the insulation at the previously cut cable ends.</p> <p></p> <p>Twist the open wire ends with your fingers to make them more robust.</p> <p></p> <p>Open the latches on both sides of the four inline splicing connectors.</p> <p></p> <p>Insert the open wire ends into each of the connectors until they hit the back wall. While holding the wires in this position, close the latches to secure them.</p> <p></p> <p>For the next steps, prepare the disassembled LED Button (button, sealing ring, counter nut, socket), the jumper wires + connectors and optionally a short cable tie.</p> <p></p> <p>Put the sealing ring onto the thread of the button.</p> <p></p> <p>Different Button Types</p> <p>Please check the cable colors and their respective assignment for your specific product on either the button itself or the button socket. Even if the button looks identical, the cable assignments/colors can be different depending on the producer or batch.</p> <p>Take a look at the socket and note the colors of the cables that are labeled with C and NO. In our case this is green for C and yellow for NO. We won't use the white cable labeled with NC.</p> <p>The green C cable will be connected to the GND (Ground) pin and the yellow NO cable will be connected to the SWITCH pin of the Witty Pi board. The red cable is the +3V supply and the black cable is the Ground for the LED ring. We will connect both to the Raspberry Pi GPIO pins.</p> <p></p> <p>Take off the insulation on the ends of the button cables and twist the open ends. Cut off the NC cable (white in our case) to close its end as we won't need it.</p> <p></p> <p>Guide all button cables under the Raspberry Pi between the standoffs, as shown in the following image. Make sure that the latch of the socket is pointing upwards.</p> <p></p> <p>Connect the +3V (red) and Ground (black) button cables to one pair of the jumper wires and the C (green) and NO (yellow) cables to the other pair. Push the cables completely inside the connectors until they hit the back wall and hold them into position while closing the latches.</p> <p></p> <p>For better cable management you can optionally use a cable tie to keep all four connectors together. Make sure to orient the latches to the outside of your bundle that the connectors can still be opened later on if necessary.</p> <p></p> <p>Push the female end of the jumper wire that is connected to the C (green) cable of the button onto the left angled pin (GND) on the Witty Pi board. Push the female end of the jumper wire that is connected to the NO (yellow) cable of the button onto the third angled pin (SWITCH).</p> <p></p> <p>Push the female end of the jumper wire that is connected to the +3V (red) LED cable of the button onto the sixth pin on the outer GPIO row of the Raspberry Pi (= GPIO 18). Push the female end of the jumper wire that is connected to the Ground (black) LED cable of the button onto the seventh pin in the same row (= Ground).</p> <p></p> <p>Insert the mounting plate into the enclosure with the USB ports facing towards the drilled holes and fix it with the four mounting plate screws.</p> <p></p> <p>Push the LED button from the outside of the enclosure through the 19 mm hole on the left.</p> <p></p> <p>First, secure the button with the counter nut. Try to close it as tight as possible while pressing the sealing ring against the outer wall of the enclosure. Make sure to align the connectors of the button with the corresponding slots in the button socket and push the socket onto the button with the latch of the socket aligned with its counterpart on the button.</p> <p></p>"},{"location":"hardware/2024_buildinstructions_hardware/#14-cable-glands-vent-plug","title":"1.4 Cable Glands + Vent Plug","text":"<p>Insert the mounting plate into the enclosure with the USB ports facing towards the drilled holes and fix it with the four mounting plate screws if you skipped the LED button integration.</p> <p> Cable Gland MBF 20-RJ45 + Sealing Ring M20 + Counter Nut M20</p> <p> Ventilation Plug M6</p> <p> Micro-USB to USB-A Adapter</p> <p> OAK-1 USB-C to USB-A cable</p> <p></p> <p>Open the cable gland and use a screwdriver or pencil to push out the slotted sealing insert.</p> <p></p> <p>Guide the USB-C end of the OAK-1 camera cable through the cable gland from the threaded side.</p> <p></p> <p>Open the slot of the sealing insert and put it around the USB cable.</p> <p></p> <p></p> <p>Push the sealing insert back into the cable gland completely. Screw the cable gland nut a little bit on the cable gland. Don't fasten it yet, the USB cable has to move freely.</p> <p></p> <p>Micro-USB Adapter</p> <p>Make sure that the Micro-USB adapter is correctly oriented, the black side of the adapter should face the blue side of the USB cable, so that the contacts are aligned. If your Raspberry Pi doesn't turn on, there could be a problem with either the adapter or the USB cable itself.</p> <p>Slide the cable gland to the USB-A side of the camera cable. Connect the Micro-USB to USB-A adapter. Prepare the cable gland sealing ring and counter nut.</p> <p></p> <p>First, put the sealing ring onto the thread of the cable gland. Then insert the USB cable through the 20 mm hole in the center of the enclosure. From the inside, guide the cable through the cable gland counter nut and connect the adapter to the inner Micro-USB port of the Raspberry Pi.</p> <p></p> <p>Fasten the cable gland counter nut tightly from inside the enclosure while pushing the sealing ring to the outer wall of the enclosure. Be careful to keep the USB cable in position so that it doesn't lose connection to the Raspberry Pi. Finally, also fasten the cable gland nut outside of the enclosure tightly, so that the sealing insert is pressed together around the USB cable.</p> <p></p> <p>Remove the counter nut of one of the M6 ventilation plugs and push the plug from the outside of the enclosure through the 6 mm hole. Fasten the counter nut tightly from the inside of the enclosure while pressing the sealing ring against the outer wall of the enclosure.</p> <p></p> <p>If you are using the solar panel, also attach the M20 cable gland to the electronics enclosure. Put the sealing ring onto the cable gland thread, push the cable gland through the 20 mm hole on the right side of the enclosure and fasten it with the counter nut from the inside. Don't fasten the cable gland nut at the outside of the enclosure yet.</p> <p></p> <p></p>"},{"location":"hardware/2024_buildinstructions_hardware/#15-top-mounting-plate","title":"1.5 Top Mounting Plate","text":"<p>In the following steps, we will attach the V75 Battery Pack to the top mounting plate that will be fixed in the lid of the enclosure. Prepare the top mounting plate with drilled holes, the remaining four mounting plate screws, the Voltaic V75 USB Battery Pack and the remaining six cable ties. Depending on the length of your cable ties, you might only need four of them (see next step).</p> <p>Start with pushing the ends of two cable ties through the two holes that are farther away from the edge of the plate while orienting the cable tie heads towards the center of the plate. Leave about 5 cm of the cable ties sticking out while turning the plate and pushing the cable tie ends through the holes at the edge from the other side. You can now already put the battery pack on the mounting plate to check if you need to extend the cable ties, as in our example below.</p> <p></p> <p>Put the battery pack onto the mounting plate with the USB ports facing towards the cable tie heads. Connect and tighten the cable ties. Cut off the protruding ends.</p> <p></p> <p>Push the two remaining cable ties through the holes on the right side of the battery while orienting the cable tie heads towards the center of the plate. Leave about 4 cm of the cable ties sticking out while pushing the cable tie ends through the holes from the other side.</p> <p></p> <p>Connect and tighten the cable ties. Cut off the protruding ends. The V75 battery should not move when shaking the mounting plate.</p> <p></p> <p>For the mounting plate integration, prepare the following tools and components:</p> <p> Electronics Enclosure Lid</p> <p> Mounting Plate + Voltaic V75 USB Battery Pack</p> <p> 4x Mounting Plate Screws B M-SHR</p> <p> Voltaic USB-C to USB-A cable</p> <p> Crosshead Screwdriver</p> <p></p> <p>Insert the mounting plate with the battery pack into the lid of the enclosure and fix it with the four mounting plate screws.</p> <p></p> <p>Put the lid on the electronics enclosure with the USB ports of the battery pack facing towards the USB-C port of the Witty Pi board. Close the latch on the USB port side, this latch will function as a hinge from now on and should not be opened again as long as the battery pack cables are still connected (for more info, check 1.6 Closing the Enclosure). Connect the battery pack to the Witty Pi board with the USB-C to USB-A cable.</p> <p></p> <p>If you are using the solar panel, follow the next steps to prepare the connection between the Voltaic V75 battery pack and the solar panel input cable.</p> <p>First, connect the Voltaic USB-C adapter to the 3.5x1.1mm cable with a twisting motion.</p> <p></p> <p>Plug the USB-C adapter into the USB-C side port of the V75 battery pack and guide the other end of the cable through the M20 cable gland. Don't fasten the cable gland nut yet.</p> <p></p> <p>Push the solar panel input cable end through the cable gland while making sure that the grooved part is just barely covered by the sealing insert. Hold the cable in this position and fasten the cable gland nut outside of the enclosure tightly, so that the sealing insert is pressed together around the cable end.</p> <p></p> <p>You are now finished with integrating the hardware into the electronics enclosure!</p> <p></p>"},{"location":"hardware/2024_buildinstructions_hardware/#16-closing-the-enclosure","title":"1.6 Closing the Enclosure","text":"<p>You can open the lid of the enclosure by inserting a flathead screwdriver about 0.5 cm into the slit in the middle of the latch. Open the latch with the screwdriver by pushing it into the direction of the enclosure. Watch this video clip as reference before you open the latches for the first time. In this way, you can also completely remove the lid.</p> <p>To make sure that the enclosure is only opened at the correct side, you can use a special blanking plug to determine the hinge side. It is also possible to close the enclosure with screws. For more information, check the Bocube info page.</p>"},{"location":"hardware/2024_buildinstructions_hardware/#2-camera-enclosure","title":"2 Camera Enclosure","text":"<p>In the next steps, we will integrate the OAK-1 camera into the camera enclosure.</p> Camera enclosure with integrated OAK-1 camera"},{"location":"hardware/2024_buildinstructions_hardware/#21-mounting-plate","title":"2.1 Mounting Plate","text":"<p>Push two M4 16 mm screws through the two drilled holes in the middle of the mounting plate. Screw two M4 nuts onto the screws until you reach the middle of the screw.</p> <p></p> <p>Use the 3 mm allen key to screw the M4 screws into both M4 holes of the OAK-1 camera in an alternating way. Only rotate a few turns for each screw and then switch to the other screw. Hold the M4 nut in place with your finger to avoid it blocking the screw, it shouldn't touch the mounting plate yet. Do this until the screws are completely inserted into the camera.</p> <p></p> <p>Now push the screws against the mounting plate from the other side and use pliers to fasten both nuts to the plate. Make sure that the camera is mounted parallel to the plate and does not move when shaking it a little bit.</p> <p></p> <p>To attach the silica gel pack, we will reuse one of the black binding wires that came with the USB cables of the OAK camera and V75 battery. Push both ends of the wire through the two small holes from underneath the plate and twist them around the silica gel pack for fixing.</p> <p></p> <p>Insert the mounting plate into to enclosure with the USB-C port of the OAK camera facing towards the 20 mm hole and fix it with the four mounting plate screws. This will be a little more difficult compared to the bigger electronics enclosure. Make sure to hold the screws perfectly vertical while screwing them in the holes of the enclosure to avoid any blocking.</p> <p></p>"},{"location":"hardware/2024_buildinstructions_hardware/#22-cable-gland-vent-plug","title":"2.2 Cable Gland + Vent Plug","text":"<p>Prepare the MBF 20-RJ45 cable gland, M20 sealing ring, M20 counter nut and M6 ventilation plug. To connect the camera, we will also need the USB-C cable end from the already prepared electronics enclosure.</p> <p></p> <p>The following steps assume that you already connected the cable gland of the electronics enclosure. For more detailed explanations, check 1.4 Cable Glands + Vent Plug.</p> <p>Put the USB-C end of the cable first through the cable gland nut and then through the cable gland. Put the sealing insert around the cable between both components and make sure that everything is oriented as in the following image.</p> <p></p> <p>Push the sealing insert back into the cable gland completely. Screw the cable gland nut a little bit on the cable gland. Don't fasten it yet, the USB cable has to move freely.</p> <p></p> <p>First, put the sealing ring onto the thread of the cable gland. Then insert the USB cable through the 20 mm hole in the enclosure. From the inside, guide the cable through the cable gland counter nut and connect it to the OAK camera.</p> <p></p> <p>Push the counter nut against the inner wall of the enclosure and fasten the cable gland from the outside of the enclosure. Be careful to keep the USB cable in position that it doesn't lose connection to the OAK camera. Finally, also fasten the cable gland nut outside of the enclosure tightly, so that the sealing insert is pressed together around the USB cable.</p> <p></p> <p>Remove the counter nut of the remaining M6 ventilation plug and push the plug from the outside of the enclosure through the 6 mm hole. Fasten the counter nut tightly from the inside of the enclosure while pressing the sealing ring against the outer wall of the enclosure.</p> <p></p>"},{"location":"hardware/2024_buildinstructions_hardware/#23-closing-the-enclosure","title":"2.3 Closing the Enclosure","text":"<p>If you insert the screws for the transparent lid, you will have to screw them through the holes in the lid first. Seal the camera enclosure by fastening all four screws.</p> <p></p> <p>Both your electronics and camera enclosure are now connected securely and are completely waterproof. Be careful during transportation and deployment to not pull the USB cables, as this could loosen the connection between Raspberry Pi and OAK camera.</p> <p></p>"},{"location":"hardware/2024_buildinstructions_mounting/","title":"Mounting Setup","text":""},{"location":"hardware/2024_buildinstructions_mounting/#mounting-setup","title":"Mounting Setup","text":"Required Tools &amp; Components <p>Tools</p> <ol> <li>Rubber Hammer</li> <li>Allen Keys (3 mm, 5 mm, 6 mm)</li> <li>Crosshead Screwdriver</li> <li>Drilling Machine + 8 mm Metal Drill Bit (if holes in Steel L-profile are smaller than 8 mm)</li> <li>Metal Saw (if Steel L-profile needs to be cut to 50 cm length)</li> </ol> <p>Components</p> <ol> <li>Insect Detect 2024 Aluminium Mount (multiple parts)</li> <li>Steel L-profile (50 cm)</li> <li>Electronics Enclosure (with integrated hardware and attached to HPL sheet)</li> <li>Camera Enclosure (with integrated OAK camera and attached to HPL sheet)</li> <li>Voltaic Solar Panel 5 Watt 6 Volt</li> <li>Voltaic Solar Panel Bracket - Medium</li> <li>Voltaic ETFE Panel Screws &amp; Washers</li> <li>5x Screw M4, internal hexagon (16 mm)</li> <li>2x Screw M8, internal hexagon (16 mm)</li> <li>5x Washer (4.3x15x1 mm)</li> <li>2x Washer (8.4x24x2 mm)</li> <li>2x Alu Square Tube, 13.5 mm (250 mm)</li> <li>5x Alu Square Tube, 13.5 mm (120 mm)</li> <li>4x Connector, 13.5 mm (right angle)</li> <li>2x Connector, 13.5 mm (+ outlet)</li> <li>HPL Sheet, green (14x14 cm)</li> <li>~720 mm Magnetic Tape, &lt;13.5 mm</li> <li>Components for Platform Design</li> </ol>"},{"location":"hardware/2024_buildinstructions_mounting/#1-insect-detect-2024-mount","title":"1 Insect Detect 2024 Mount","text":"<p>We recommend our field-tested mounting solution for highly customizable camera trap setups, using either easily exchangeable platforms as attractant and background for insect detection &amp; tracking, or optionally any other background of choice, e.g. real flowers (suitable detection model required!). The Insect Detect 2024 Mount is based on robust high-quality aluminium components and can be easily modified in many ways. It enables free adjustment of the camera height/angle and is stabilized with a soil anchor.</p> <p>The item project includes all required components including necessary machining (account required, but you can also download the project overview first). You can use the item Engineeringtool to easily edit the proposed mounting solution and adapt it to your needs.</p> Fully assembled Insect Detect 2024 Mount"},{"location":"hardware/2024_buildinstructions_mounting/#11-camera-holder","title":"1.1 Camera Holder","text":"<p>We will start with putting the two caps on one of the end faces of the longer profile and on the end face without drilled M8 thread of one of the shorter profiles. Position the caps and use a rubber hammer to fix them to the profiles.</p> <p></p> <p>Take the short profile with cap and slide one of the M4 T-Slot nuts into the groove.</p> <p></p> <p>Get the two ball joints + M8 screws and use a 6 mm allen key to connect them to the side of the short profiles with drilled M8 thread.</p> <p></p> <p></p> <p>For the next step, get the angle bracket set and the short profile without cap. Slide one of the M8 T-Slot nuts into the groove of the profile and use a 5 mm allen key to connect the angle bracket to it with one of the M8 screws + square washer. Don't fasten it too tight yet, we will do this in the next step. We won't use the grey cap that comes with the set, but you can optionally put it on the angle bracket later for long-term field deployment.</p> <p></p> <p></p> <p>Slide the second M8 T-Slot nut into any groove of the long profile and connect the angle bracket (+ short profile) to it with the second M8 screw + square washer. Loosen the angle bracket screw in the short profile a little bit and push the short profile towards the long profile, so that it sits flush. Now you can fasten both screws. In the field, you will only need to loosen the screw that is connected to the long profile to set the height of the camera.</p> <p></p> <p></p> <p>Get the ball joint basic unit and unscrew the clamp lever to separate both halves. Put them around both ball joints while making sure that the open end is facing towards the short profile with cap. Screw the clamp lever into the basic unit again to connect both of the short profiles. By pushing the red button on the lever, you can change its position without loosening the screw.</p> <p></p> <p></p>"},{"location":"hardware/2024_buildinstructions_mounting/#12-soil-anchor","title":"1.2 Soil Anchor","text":"<p>We are using a 50 cm perforated steel L-profile as soil anchor for the camera trap mount. Depending on the length of your L-profile, you might need to cut it to 50 cm using a metal saw. You may find a L-profile with 8 mm (or larger) holes, which is perfect. If the holes are smaller, you will need to drill two holes with a 8 mm metal drill bit, as shown in the following image.</p> <p></p> <p>Slide one of the M8 heavy-duty T-Slot nuts into the groove on the opposite side of the camera holder. Slide the other M8 T-Slot nut into the groove on the right side of the camera holder.</p> <p></p> <p>Put the steel L-profile on the long aluminium profile and align the T-Slot nuts with the holes in the L-profile. Use a 6 mm allen key to fix the L-profile to the aluminium profile with the two M8 16 mm screws + 8.4 mm washers.</p> <p></p> <p>By loosening the screws, you can slide the soil anchor in or out and determine its length, e.g. depending on the type of soil (shallow/deep). For storage and transportation, slide the soil anchor completely onto the aluminium profile.</p> <p></p>"},{"location":"hardware/2024_buildinstructions_mounting/#2-platform","title":"2 Platform","text":"<p>At the moment we are using a green 14x14 cm platform with round stickers (\"Folie Wetterfest Wei\u00df\") which were painted with three different colors that already proved their attraction efficiency in multiple studies (e.g. Krahner et al., 2021; Westphal et al., 2008). We first used \"Sparvar 1315 Grundierung Wei\u00df\" as primer and then \"Sparvar 3104 Gelb Leuchtspray\" for the yellow, \"Sparvar 3107 Blau Leuchtspray\" for the blue and \"Sparvar 3108 Wei\u00df Leuchtspray\" for the white stickers. All stickers were finally sprayed with clear varnish (\"Sparvar 1301 Klarlack\").</p> <p></p> <p>The current design of the platform frame is adapted to this 14x14 cm platform. It is planned that instructions for various sizes, also including 16:9 aspect ratio will be published in the future.</p>"},{"location":"hardware/2024_buildinstructions_mounting/#21-platform-frame","title":"2.1 Platform Frame","text":"<p>You should have five shorter aluminium square tubes, one with two drilled 4 mm holes, and two longer square tubes. We will start with the four shorter tubes without drilled holes. Push two of the angled connectors on both sides of one short square tube and the two angled connectors + outlet on another one. Use a rubber hammer if it is too difficult to push in the connectors.</p> <p></p> <p>Connect the prepared square tubes to the two remaining short square tubes without holes.</p> <p></p> <p></p> <p>Take the last short square tube with drilled holes and push the two remaining angled connectors on both sides while making sure that the holes are oriented as shown in the following image.</p> <p></p> <p>Connect the two long square tubes to the square frame and the square tube with holes.</p> <p></p> <p></p>"},{"location":"hardware/2024_buildinstructions_mounting/#22-attach-platform","title":"2.2 Attach Platform","text":"<p>We are going to use magnetic tape to attach the platform to the frame. This enables easy exchangeability of different platforms. However, you could also use double-sided adhesive tape.</p> <p>The magnetic tape comes in an A and B type, in our example marked with a straight line in the middle of type A. Cut off three pieces of about 12 cm from type A and stick them to the underside of the platform. Leave about 5 mm space on one side, as shown in the following image. Cut off three corresponding pieces in the same length from type B.</p> <p></p> <p>Place the three pieces from type B on the pieces already attached to the platform with the adhesive side facing towards you. Strip off the film.</p> <p></p> <p>Push the platform with the magnetic tape firmly onto the frame, so that the adhesive side of type B is glued to the frame in the optimal position.</p> <p></p> <p>Now you can remove the platform and the magnetic tape will stick to the frame.</p> <p></p>"},{"location":"hardware/2024_buildinstructions_mounting/#3-mount-components","title":"3 Mount Components","text":"<p>The following steps can be used to test the mounting of all components, normally you would do this in the field when setting up the camera trap.</p> <p>Fix the solar panel to the solar panel bracket with the three ETFE panel screws and washers.</p> <p></p> <p>To mount the solar panel and electronics enclosure to the aluminium profile, slide four M4 T-Slot nuts into the groove on the left side of the camera holder.</p> <p></p> <p>Attach the HPL sheet that is fixed to the electronics enclosure to the two T-Slot nuts facing towards the profile side without cap with two 16 mm M4 screws and washers.</p> <p></p> <p>Attach the solar panel bracket to the other two T-Slot nuts above the electronics enclosure with two 16 mm M4 screws and washers. Connect the solar panel cable to the solar panel input of the electronics enclosure.</p> <p></p> <p>Mount the camera enclosure to the camera holder with a 16 mm M4 screw and washer.</p> <p></p>"},{"location":"hardware/2024_buildinstructions_overview/","title":"Overview","text":""},{"location":"hardware/2024_buildinstructions_overview/#overview","title":"Overview","text":"Disclaimer <p>Every effort has been made to check the instructions for accuracy and completeness. However, the author cannot be held responsible for any errors or omissions. The readers remain responsible for their safety when using the tools, hardware and software described in the instructions for building and deploying the Insect Detect camera trap. The readers must also comply with all applicable laws and regulations regarding the deployment of the camera trap system including the associated software and deep learning models. The author of these instructions cannot be held responsible for the results of action, inaction, or otherwise taken as a consequence of the information provided in the instructions. All products, brands and product links to any online shops are mentioned for illustration purposes only and do not denote a commercial relationship between the author and the products/brands/shops.</p> <p>The following instructions will show you how to build the Full Setup of the Insect Detect DIY camera trap for automated insect monitoring (version 2024).</p> Required Tools <ol> <li>Printer</li> <li>Scissors</li> <li>Adhesive Tape</li> <li>Nail/Screw &amp; Hammer</li> <li>Pointed Tool (e.g. from multi-tool knife)</li> <li>Rubber Hammer</li> <li>Drilling Machine</li> <li>Drill Press (recommended if available)</li> <li>Bench Vise (recommended if available)</li> <li>Metal Step Drill Bit (with 20 mm step) - for M20 Cable Glands</li> <li>Forstner Bit or similar (19 mm) - for LED Button</li> <li>Metal Drill Bit (4 mm + 6 mm) - for Enclosures, HPL Sheets and Aluminium Square Tube</li> <li>Metal Drill Bit (8 mm) - if holes in Steel L-profile are smaller than 8 mm</li> <li>Wood Drill Bit (3 mm + 4 mm) - for Mounting Plates</li> <li>Metal Saw (if Steel L-profile needs to be cut to 50 cm length)</li> <li>Allen Keys (3 mm, 5 mm, 6 mm)</li> <li>Crosshead Screwdrivers (small for M2.5 screws + large for enclosure screws)</li> <li>Flathead Screwdriver (to open electronics enclosure lid)</li> <li>Pliers</li> <li>Microfiber Cloth</li> <li>Soldering Iron (+ Solder)</li> <li>Mounting Putty (e.g. patafix or Blu Tack)</li> <li>Wire Stripper Tool (or scissors if not available)</li> </ol>"},{"location":"hardware/2024_buildinstructions_overview/#tools-components-per-section","title":"Tools &amp; Components per section","text":""},{"location":"hardware/2024_buildinstructions_overview/#preparing-the-enclosures","title":"Preparing the Enclosures","text":"Required Tools &amp; Components <p>Tools</p> <ol> <li>Printer</li> <li>Scissors</li> <li>Adhesive Tape</li> <li>Nail/Screw &amp; Hammer</li> <li>Pointed Tool (e.g. from multi-tool knife)</li> <li>Drilling Machine</li> <li>Drill Press (recommended if available)</li> <li>Bench Vise (recommended if available)</li> <li>Metal Step Drill Bit (with 20 mm step) - for M20 Cable Glands</li> <li>Forstner Bit or similar (19 mm) - for LED Button</li> <li>Metal Drill Bit (4 mm + 6 mm) - for Enclosures, HPL Sheets and Aluminium Square Tube</li> <li>Wood Drill Bit (3 mm + 4 mm) - for Mounting Plates</li> <li>Allen Key (3 mm)</li> <li>Pliers</li> <li>Microfiber Cloth</li> </ol> <p>Components</p> <ol> <li>Bocube Enclosure B 221309 PC-V0 (= Electronics Enclosure)</li> <li>Euromas Enclosure M 215 G (= Camera Enclosure)</li> <li>2x Bocube Mounting Plate B M 2213</li> <li>Euromas Mounting Plate M 215</li> <li>HPL Sheet, 3 mm (10x20 cm)</li> <li>HPL Sheet, 3 mm (12x24 cm)</li> <li>Alu Square Tube, 13.5 mm (120 mm)</li> <li>6x Screw M4, internal hexagon (16 mm)</li> <li>2x Screw M4, internal hexagon (30 mm)</li> <li>16x Hex Nut M4, flat</li> <li>8x Washer (4.3x15x1 mm)</li> <li>Screen Protector (~7x9 cm)</li> </ol>"},{"location":"hardware/2024_buildinstructions_overview/#integrating-the-hardware","title":"Integrating the Hardware","text":"Required Tools &amp; Components <p>Tools</p> <ol> <li>Soldering Iron (+ Solder)</li> <li>Mounting Putty (e.g. patafix or Blu Tack)</li> <li>Crosshead Screwdrivers (small for M2.5 screws + large for enclosure screws)</li> <li>Flathead Screwdriver (to open electronics enclosure lid)</li> <li>Pliers</li> <li>Scissors</li> <li>Wire Stripper Tool (or scissors if not available)</li> </ol> <p>Components</p> <ol> <li>Electronics Enclosure (with drilled holes)</li> <li>2x Mounting Plate Electronics Enclosure (with drilled holes)</li> <li>2x Mounting Plate Screw Set B M-SHR</li> <li>Raspberry Pi Zero 2 WH</li> <li>Raspberry Pi CPU Heatsink</li> <li>Raspberry Pi Stacking GPIO Header</li> <li>Micro-USB to USB-A Adapter</li> <li>Witty Pi 4 L3V7</li> <li>Single Row Pin Header, angled (7 pins)</li> <li>4x Standoff M2.5, female-male (5 mm)</li> <li>4x Standoff M2.5, female-female (11-12 mm)</li> <li>8x Screw M2.5 (5 mm)</li> <li>Li-Ion Battery Pack 3.7V (4400mAh)</li> <li>Voltaic V75 USB Battery Pack + USB-C Cable</li> <li>8x Cable Tie, 3.6 mm (length: 250+ mm)</li> <li>2x Binding Wire (e.g. from OAK/Voltaic USB cables)</li> <li>2x Silica Gel Pack (5 g)</li> <li>4x Jumper Wire, 1-2 female ends (20 cm)</li> <li>4x WAGO Inline Splicing Connector</li> <li>LED Push Button (3V) + Socket</li> <li>2x Cable Gland MBF 20-RJ45</li> <li>2x Cable Gland Counter Nut M20</li> <li>2x Cable Gland Sealing Ring M20</li> <li>2x Ventilation Plug M6</li> <li>Cable Gland M20</li> <li>Cable Gland Counter Nut M20</li> <li>Cable Gland Sealing Ring M20</li> <li>Voltaic 3.5x1.1mm USB-C Adapter</li> <li>Voltaic 3.5x1.1mm Cable (30 cm)</li> <li>Camera Enclosure (with drilled holes)</li> <li>Mounting Plate Camera Enclosure (with drilled holes)</li> <li>OAK-1 (Auto-Focus) + USB-C Cable</li> <li>2x Screw M4, internal hexagon (16 mm)</li> <li>2x Hex Nut M4, flat</li> </ol>"},{"location":"hardware/2024_buildinstructions_overview/#mounting-setup","title":"Mounting Setup","text":"Required Tools &amp; Components <p>Tools</p> <ol> <li>Rubber Hammer</li> <li>Allen Keys (3 mm, 5 mm, 6 mm)</li> <li>Crosshead Screwdriver</li> <li>Drilling Machine + 8 mm Metal Drill Bit (if holes in Steel L-profile are smaller than 8 mm)</li> <li>Metal Saw (if Steel L-profile needs to be cut to 50 cm length)</li> </ol> <p>Components</p> <ol> <li>Insect Detect 2024 Aluminium Mount (multiple parts)</li> <li>Steel L-profile (50 cm)</li> <li>Electronics Enclosure (with integrated hardware and attached to HPL sheet)</li> <li>Camera Enclosure (with integrated OAK camera and attached to HPL sheet)</li> <li>Voltaic Solar Panel 5 Watt 6 Volt</li> <li>Voltaic Solar Panel Bracket - Medium</li> <li>Voltaic ETFE Panel Screws &amp; Washers</li> <li>5x Screw M4, internal hexagon (16 mm)</li> <li>2x Screw M8, internal hexagon (16 mm)</li> <li>5x Washer (4.3x15x1 mm)</li> <li>2x Washer (8.4x24x2 mm)</li> <li>2x Alu Square Tube, 13.5 mm (250 mm)</li> <li>5x Alu Square Tube, 13.5 mm (120 mm)</li> <li>4x Connector, 13.5 mm (right angle)</li> <li>2x Connector, 13.5 mm (+ outlet)</li> <li>HPL Sheet, green (14x14 cm)</li> <li>~720 mm Magnetic Tape, &lt;13.5 mm</li> <li>Components for Platform Design</li> </ol>"},{"location":"hardware/2024_buildinstructions_overview/#field-deployment","title":"Field Deployment","text":"Required Tools &amp; Components <p>Tools</p> <ol> <li>Spade</li> <li>Allen Keys (3 mm, 5 mm, 6 mm)</li> </ol> <p>Components</p> <ol> <li>Insect Detect 2024 Mount (fully assembled)</li> <li>Electronics &amp; Camera Enclosures (with integrated hardware)</li> <li>Voltaic Solar Panel 5 Watt 6 Volt (attached to solar panel bracket)</li> <li>Platform Frame + Platform</li> <li>5x Screw M4, internal hexagon (16 mm)</li> <li>5x Washer (4.3x15x1 mm)</li> <li>2x Hex Nut M4, flat</li> </ol>"},{"location":"hardware/2024_components/","title":"Components","text":""},{"location":"hardware/2024_components/#components","title":"Components","text":"<p>Choose your Hardware Setup</p> <p>Depending on your field of application, several variations of the hardware setup with different scopes and required components are possible. Three example setups are presented here that can be easily modified if desired.</p>"},{"location":"hardware/2024_components/#full-setup","title":"Full Setup","text":"<p>For a total cost of about 660 \u20ac, the full hardware setup includes all necessary components for continuous automated monitoring of insects in the field during a whole season with any background of choice (e.g. flower platform, screen, real flower, etc.).</p> <p>Two batteries with a combined capacity of ~88Wh enable a continuous monitoring of about 20 hours (e.g. 4 hours/day for 5 days), even if no sunlight is available to charge the batteries with the 5W solar panel. An integrated LED button can be used to turn the camera trap on and off without needing to open the enclosure. The behaviour of the LED ring in the button can be programmed to give specific feedback to the user. A highly customizable mounting solution enables free adjustment of the camera height/angle and is stabilized with a soil anchor.</p>"},{"location":"hardware/2024_components/#minimal-setup","title":"Minimal Setup","text":"<p>For a total cost of about 445 \u20ac, the minimal hardware setup includes all necessary components for automated monitoring of insects in the field.</p> <p>The minimal setup does not include a solar panel, LED button and mounting. It is expected that you want to use your custom solutions, but all additional options (solar panel, button, mounting) can also be easily added later on.</p>"},{"location":"hardware/2024_components/#test-setup","title":"Test Setup","text":"<p>For a total cost of about 196 \u20ac you can already get started to test the basic hardware and software capabilities in a lab setting. As there is no battery included in this setup, an additional power supply will be necessary, e.g. a Micro-USB to USB-A cable that is connected to a USB port.</p>"},{"location":"hardware/2024_components/#list-of-components","title":"List of Components","text":"Component Costs <p>Most prices are shown with 19% VAT (for Germany) and without shipping costs. Depending on your country the VAT may differ and additional shipping costs may increase the total cost of the components.</p> <p>The prices for specific components may change and this list is only a snapshot in time (January 2025).</p> USB-C Cables <p>A USB-C to USB-A cable to connect the OAK camera to the Raspberry Pi is included in the OAK-1 box and is therefore not listed in the components. Another USB-C to USB-A cable to connect the Witty Pi 4 L3V7 to the V75 battery is included in the V75 box and is therefore not listed in the components.</p> V75 Battery Version <p>The new version of the Voltaic V75 Battery  uses an USB-C side port for charging with the solar panel. If you have the  old version with Micro-USB input, get the Micro-USB Adapter  instead of the USB-C Adapter listed in the following.</p> Full SetupMinimal SetupTest Setup Component Quantity Price (\u20ac) Shop 1 Shop 2 Main Electronic Components OAK-1 (Auto-Focus) 1 141.55 Mouser Luxonis Raspberry Pi Zero 2 WH 1 21.90 Reichelt rpilocator Raspberry Pi CPU Heatsink 1 1.20 Reichelt Pimoroni SanDisk Extreme microSD (256 GB) 1 24.95 Reichelt SanDisk Micro-USB to USB-A Adapter 1 1.85 Reichelt BerryBase Raspberry Pi Stacking GPIO Header 1 2.12 UUGear Reichelt Witty Pi 4 L3V7 1 28.56 UUGear BerryBase Li-Ion Battery Pack 3.7V (4400mAh) 1 14.24 Eckstein Pimoroni Voltaic V75 USB Battery Pack 1 101.14 Kiwi Electronics Voltaic Standoff M2.5, female-male (5 mm) 4 1.12 Reichelt BerryBase Standoff M2.5, female*2 (11-12 mm) 4 1.92 UUGear Reichelt Screw M2.5 (5 mm) 8 1.92 UUGear BerryBase Enclosures &amp; Accessories Bocube Enclosure B 221309 PC-V0 1 46.95 Bopla Reichelt Bocube Mounting Plate B M 2213 2 9.07 Bopla Reichelt Bocube Screw Set B M-SHR 2 0.57 Bopla Euromas Enclosure M 215 G 1 24.16 Bopla Reichelt Euromas Mounting Plate M 215 1 2.59 Bopla Reichelt Cable Gland MBF 20-RJ45 2 14.26 Bopla Cable Gland Counter Nut M20 2 0.96 Bopla DIY Store Cable Gland Sealing Ring M20 2 0.20 Bopla DIY Store Ventilation Plug M6 2 1.80 Reichelt Screen Protector (~7x9 cm) 1 1.12 protectionfilms24 Silica Gel Pack (5 g) 2 0.45 Amazon DIY Store Cable Tie, 3.6 mm (length: 250+ mm) 8 0.43 Reichelt DIY Store Screw M4, internal hexagon (16 mm) 2 0.05 Schraubenluchs DIY Store Hex Nut M4, flat 2 0.01 Schraubenluchs DIY Store LED Button LED Push Button (3V) + Socket 1 5.22 Funduino Adafruit Single Row Pin Header, angled (7 pins) 1 0.09 Eckstein Pimoroni Jumper Wire, 1-2 female ends (20 cm) 4 0.60 Eckstein BerryBase WAGO Inline Splicing Connector 4 1.96 Reichelt Pimoroni Solar Panel &amp; Accessories Voltaic Solar Panel 5 Watt 6 Volt 1 40.45 Kiwi Electronics Voltaic Voltaic Solar Panel Bracket - Medium 1 10.70 Kiwi Electronics Voltaic Voltaic ETFE Panel Screws &amp; Washers 1 3.56 Kiwi Electronics Voltaic Voltaic 3.5x1.1mm USB-C Adapter 1 3.92 Kiwi Electronics Voltaic Voltaic 3.5x1.1mm Cable (30 cm) 1 5.70 Kiwi Electronics Voltaic Cable Gland M20 1 1.73 Bopla DIY Store Cable Gland Counter Nut M20 1 0.48 Bopla DIY Store Cable Gland Sealing Ring M20 1 0.10 Bopla DIY Store Mounting Insect Detect 2024 Aluminium Mount 1 101.20 item PDF HPL Sheet, 3 mm (10x20 cm) 1 3.57 hplplattenshop DIY Store HPL Sheet, 3 mm (12x24 cm) 1 3.57 hplplattenshop DIY Store Steel L-profile (50 cm) 1 3.23 Hornbach DIY Store Screw M4, internal hexagon (16 mm) 11 0.27 Schraubenluchs DIY Store Screw M4, internal hexagon (30 mm) 2 0.12 Schraubenluchs DIY Store Screw M8, internal hexagon (16 mm) 2 0.17 Schraubenluchs DIY Store Hex Nut M4, flat 20 0.12 Schraubenluchs DIY Store Washer (4.3x15x1 mm) 13 0.09 Schraubenluchs DIY Store Washer (8.4x24x2 mm) 2 0.08 Schraubenluchs DIY Store Platform (14x14 cm) Alu Square Tube, 13.5 mm (250 mm) 2 3.88 Alusteck DIY Store Alu Square Tube, 13.5 mm (120 mm) 5 5.90 Alusteck DIY Store Connector, 13.5 mm (right angle) 4 8.76 Alusteck DIY Store Connector, 13.5 mm (+ outlet) 2 4.38 Alusteck DIY Store HPL Sheet, green (14x14 cm) 1 3.57 hplplattenshop DIY Store Magnetic Tape, &lt;13.5 mm (~720 mm) 1 1.50 magnet-shop DIY Store Components for Platform Design Instructions Total Cost ~660 Component Quantity Price (\u20ac) Shop 1 Shop 2 Main Electronic Components OAK-1 (Auto-Focus) 1 141.55 Mouser Luxonis Raspberry Pi Zero 2 WH 1 21.90 Reichelt rpilocator Raspberry Pi CPU Heatsink 1 1.20 Reichelt Pimoroni SanDisk Extreme microSD (256 GB) 1 24.95 Reichelt SanDisk Micro-USB to USB-A Adapter 1 1.85 Reichelt BerryBase Raspberry Pi Stacking GPIO Header 1 2.12 UUGear Reichelt Witty Pi 4 L3V7 1 28.56 UUGear BerryBase Li-Ion Battery Pack 3.7V (4400mAh) 1 14.24 Eckstein Pimoroni Voltaic V75 USB Battery Pack 1 101.14 Kiwi Electronics Voltaic Standoff M2.5, female-male (5 mm) 4 1.12 Reichelt BerryBase Standoff M2.5, female*2 (11-12 mm) 4 1.92 UUGear Reichelt Screw M2.5 (5 mm) 8 1.92 UUGear BerryBase Enclosures &amp; Accessories Bocube Enclosure B 221309 PC-V0 1 46.95 Bopla Reichelt Bocube Mounting Plate B M 2213 2 9.07 Bopla Reichelt Bocube Screw Set B M-SHR 2 0.57 Bopla Euromas Enclosure M 215 G 1 24.16 Bopla Reichelt Euromas Mounting Plate M 215 1 2.59 Bopla Reichelt Cable Gland MBF 20-RJ45 2 14.26 Bopla Cable Gland Counter Nut M20 2 0.96 Bopla DIY Store Cable Gland Sealing Ring M20 2 0.20 Bopla DIY Store Ventilation Plug M6 2 1.80 Reichelt Screen Protector (~7x9 cm) 1 1.12 protectionfilms24 Silica Gel Pack (5 g) 2 0.45 Amazon DIY Store Cable Tie, 3.6 mm (length: 250+ mm) 8 0.43 Reichelt DIY Store Screw M4, internal hexagon (16 mm) 2 0.05 Schraubenluchs DIY Store Hex Nut M4, flat 2 0.01 Schraubenluchs DIY Store Total Cost ~445 Component Quantity Price (\u20ac) Shop 1 Shop 2 Main Electronic Components OAK-1 (Auto-Focus) 1 141.55 Mouser Luxonis Raspberry Pi Zero 2 WH 1 21.90 Reichelt rpilocator Raspberry Pi CPU Heatsink 1 1.20 Reichelt Pimoroni SanDisk Extreme microSD (256 GB) 1 24.95 Reichelt SanDisk Micro-USB to USB-A Adapter 1 1.85 Reichelt BerryBase Micro-USB to USB-A Cable (power RPi) 1 4.70 Reichelt Total Cost ~196"},{"location":"hardware/2024_field_deployment/","title":"Field Deployment","text":""},{"location":"hardware/2024_field_deployment/#field-deployment","title":"Field Deployment","text":"Required Tools &amp; Components <p>Tools</p> <ol> <li>Spade</li> <li>Allen Keys (3 mm, 5 mm, 6 mm)</li> </ol> <p>Components</p> <ol> <li>Insect Detect 2024 Mount (fully assembled)</li> <li>Electronics &amp; Camera Enclosures (with integrated hardware)</li> <li>Voltaic Solar Panel 5 Watt 6 Volt (attached to solar panel bracket)</li> <li>Platform Frame + Platform</li> <li>5x Screw M4, internal hexagon (16 mm)</li> <li>5x Washer (4.3x15x1 mm)</li> <li>2x Hex Nut M4, flat</li> </ol>"},{"location":"hardware/2024_field_deployment/#camera-trap-setup","title":"Camera Trap Setup","text":"<p>Soil Anchor</p> <p>It is highly recommended to use a spade to pre-dig a slit in the soil where the soil anchor can be more easily inserted. Mount the enclosures and solar panel only after stabilizing the camera trap mount in the soil.</p> <p>Use a 6 mm allen key to slightly loosen the two M8 screws and extend the soil anchor. Fasten the screws again and push the anchor into the soil as deep as possible. In most cases you probably won't be able to insert it all the way which is fine as long as the mount is stable.</p> <p></p> <p>Loosen the two M8 screws again and slide down the long aluminium profile until it sits flush on the soil. Finally, fasten the screws tightly again.</p> <p></p> <p>Use the 16 mm M4 screws and washers to mount the electronics enclosure, solar panel and camera enclosure, more details here. If you need to do this more frequently, using wing screws will make the setup process faster.</p> <p>To attach the platform frame to the camera, slide the aluminium square tube with the two 4 mm holes onto the 30 mm screws and fix it with two M4 nuts. Use wing nuts if you want to mount or remove the platform frame faster.</p> <p></p> <p>You can use the lever to manage the camera USB cable. Press the red button on the lever to change its position without loosening the clamp.</p> <p></p> <p>You can optionally omit the platform and monitor any other background of choice, e.g. real flowers (suitable detection model required!). Change the height of the camera holder by loosening the screw that connects the angle bracket to the long aluminium profile with a 5 mm allen key. Adjust the position of the camera by moving the HPL sheet and/or loosening the clamp of the ball joints to change the angle.</p> <p></p>"},{"location":"hardware/buildinstructions_enclosure/","title":"Preparing the Enclosure","text":""},{"location":"hardware/buildinstructions_enclosure/#preparing-the-enclosure","title":"Preparing the Enclosure","text":""},{"location":"hardware/buildinstructions_enclosure/#what-you-will-need","title":"What you will need","text":"Required tools &amp; components <ol> <li>Drilling machine</li> <li>Metal Drill Bit 3 mm</li> <li>Metal Step Drill Bit (with 14 and 20 mm step)</li> <li>Crepe tape</li> <li>Sealing Glue</li> <li>Scissors</li> <li>14 mm Hole Punch</li> <li>Hammer</li> <li>Fibox TM 1625 Mounting Plate</li> <li>Fibox PC 162513 Enclosure</li> <li>Cable Gland + Locknut PG 13.5</li> <li>Acrylic Glas (2 mm) 40x40 mm</li> <li>EPDM Sealing Strip 20x5 mm</li> </ol>"},{"location":"hardware/buildinstructions_enclosure/#drilling-the-mounting-plate-holes","title":"Drilling the mounting plate holes","text":"<p>You could start by marking the four holes where the Raspberry Pi Zero 2 W and the PiJuice Zero will be fixed with the spacer bolts. Instead of measuring and marking the drilling holes, you can print the provided drill template (original size) and attach it to the mounting plate. Use a strong nail and hammer to mark the drilling positions. This will also help to align the drill bit when placing it on the otherwise smooth surface of the plate.</p> <p></p> <p></p> <p>One hard hit with the hammer will slightly puncture the mounting plate at the correct positions for drilling the holes.</p> <p></p> <p>In the next step we will drill the holes with a 3 mm metal drill bit. It is recommended to drill rather slow to avoid overheating of the drill bit.</p> <p></p> <p></p> <p>After the holes are drilled, you might notice sharp edges (burrs) around them. We are going to deburr the holes with the step drill bit on both sides of the mounting plate. Be careful to not apply too much pressure!</p> <p></p>"},{"location":"hardware/buildinstructions_enclosure/#drilling-the-enclosure-holes","title":"Drilling the enclosure holes","text":"<p>First, we are going to mark the 14 mm hole in the lid of the enclosure, where the camera will record through.</p> <p></p> <p>While drilling with the step drill bit, be cautious to stop at the 14 mm mark. An assistant will come in helpful here!</p> <p></p> <p>You can carefully go a little bit deeper to the next drill bit step to deburr the camera hole.</p> <p></p> <p>The preparation of the enclosure lid is finished now and you can put it aside. We will continue with the main part of the enclosure. The cable gland will be attached at the shorter side of the enclosure, for which we will have to drill a 20 mm hole in the next step.</p> <p></p> <p></p> <p>While drilling, you will have to go a little bit deeper this time, to the 20 mm step. Again, you can go a little bit deeper to the next drill bit step to deburr the hole.</p> <p></p> <p></p>"},{"location":"hardware/buildinstructions_enclosure/#attaching-the-cable-gland","title":"Attaching the cable gland","text":"<p>You can put aside the drilling machine for now, as we are finished with preparing the holes in the mounting plate and enclosure. In the next step, we will attach the PG 13.5 cable gland with the locknut at the side of the enclosure. It is recommended to use a sealing ring at the outer side of the enclosure. If this did not come with your cable gland, you can use a standard 18x2 mm O-ring for faucets from your local hardware store.</p> <p></p> <p></p>"},{"location":"hardware/buildinstructions_enclosure/#preparing-the-camera-hole-protection-glass","title":"Preparing the camera hole: Protection glass","text":"<p>To completely waterproof the enclosure, we will glue a 40x40 mm piece of 2 mm thick acrylic glass in front of the camera hole. You will need crepe tape, sealing glue, some kind of spatula (e.g. end of a zip tie) and a microfiber cloth for cleaning the acrylic glass piece.</p> <p></p> <p>First, put the glass piece on top of the enclosure lid so that the camera hole will be in its center. Now you can mark the position with crepe tape. This will also help to prevent spilling of glue around the glass.</p> <p></p> <p>Leave about 1-2 mm of free space between the glass piece and the crepe tape. We will use this area for sealing of the glass later.</p> <p></p> <p>Use the DIY-spatula to apply the sealing glue. Be careful not to use too much glue and omit the area near the camera hole.</p> <p></p> <p></p> <p>Make sure to clean the glass piece immediately before putting it onto the glued surface.</p> <p></p> <p>Press down the glass piece and carefully squeeze out as much air as possible, while preventing that glue is reaching the camera hole.</p> <p></p> <p>After the glass is attached to the enclosure lid, we can add some sealing glue to the edges and even it out with the spatula. Make sure to put a little bit more glue at the corners of the glass piece.</p> <p></p> <p>Wipe down excess glue that might have gathered on top of the glass piece.</p> <p></p> <p>After the acrylic glass piece is properly sealed, slowly remove the crepe tape. Do not wait too long or the glue will harden and will make removing the tape more difficult. Be very careful to not smear the glue while removing the tape.</p> <p></p> <p>After you fixed the acrylic glass piece to the top of the lid, let it sit for some time to make sure the glue is hard enough to proceed. Check the instructions of the glue you used for the minimum amount of time required to harden.</p> <p></p>"},{"location":"hardware/buildinstructions_enclosure/#preparing-the-camera-hole-inside-sealing","title":"Preparing the camera hole: Inside sealing","text":"<p>In the next step, we are going to cut a 30 mm long piece from the 20x5 mm EPDM sealing strip.</p> <p></p> <p>Put the sealing strip on a piece of wood or something similar, place the 14 mm Hole Punch in its the center and hit it with the hammer about two to three times.</p> <p></p> <p>Now that the piece of sealing strip has a 14 mm wide hole in its middle, we can align it with the 14 mm hole we drilled before and attach it to the inside of the enclosure lid.</p> <p></p> <p>And that's it! Everything is now prepared for the next steps where we will integrate the hardware into the enclosure.</p>"},{"location":"hardware/buildinstructions_hardware/","title":"Integrating the Hardware","text":""},{"location":"hardware/buildinstructions_hardware/#integrating-the-hardware","title":"Integrating the Hardware","text":""},{"location":"hardware/buildinstructions_hardware/#what-you-will-need","title":"What you will need","text":"Required tools &amp; components <ol> <li>Soldering Iron (+ Solder) or Hammer Header</li> <li>Pliers</li> <li>6x Cable Tie Mount</li> <li>6x Stainless Steel Cable Ties</li> <li>1x releasable Cable Tie</li> <li>Silica Gel Pack 50 g</li> <li>OAK-1 (OpenCV AI Kit)</li> <li>Raspberry Pi Zero 2 W (+ microSD card)</li> <li>RPi CPU Heatsink</li> <li>RPi Header</li> <li>RPi Stacking Header</li> <li>RPi Spacer Bolts 10 mm</li> <li>RPi Spacer Bolts 20 mm</li> <li>PiJuice Zero UPS pHAT</li> <li>Solar Panel Extension Cable, 1 ft</li> <li>Voltaic 12,800mAh Li-Ion Battery (Full Setup only)</li> <li>2x Thermal Pad (1 mm) 50x50 mm (optional)</li> <li>2x Heatsink 40x30 mm (optional)</li> <li>Solar Panel Micro USB Adapter</li> <li>PiJuice 12,000mAh LiPo Battery</li> <li>Micro USB to USB A Adapter, angled</li> <li>USB A to micro USB cable, 20 cm, angled (Full Setup only)</li> <li>Solar Panel 6V 9W</li> </ol>"},{"location":"hardware/buildinstructions_hardware/#oak-1-and-silica-gel-fixing","title":"OAK-1 and silica gel fixing","text":"<p>As we just finished preparing the lid of the enclosure, we can continue with sticking the cable tie mounts to the inside of the lid to attach the OAK-1 and a pack of silica gel. Clean the surface with some alcohol and mark the positions of the cable tie mounts before attaching them.</p> <p></p> <p>Now we are going to put the stainless steel cable ties through the cable tie mounts after bending the tip of the cable ties a little bit.</p> <p></p> <p>After attaching and connecting the cable ties, bend them a litte bit to make it easier to put the OAK-1 under them in the next step.</p> <p></p> <p></p> <p>Make sure to center the lens of the OAK-1 camera before you tighten the cable ties.</p> <p></p> <p>If you used the suggested 52 cm long steel cable ties, cut off or bend the protruding ends after tightening.</p> <p></p> <p>While you could also use one of the stainless steel cable ties to fix the silica gel pack, we will use a shorter releasable plastic cable tie to make exchanging of the silica pack easier. Raise the end of the cable tie with e.g. a screwdriver if it does not bend when touching the side of the lid.</p> <p></p> <p>Connect the cable tie loosely and bend it to put the silica gel pack underneath.</p> <p></p> <p>The lid of the enclosure is finished now and we are going to move on with attaching the rest of the hardware to the mounting plate of the enclosure.</p> <p></p>"},{"location":"hardware/buildinstructions_hardware/#rpi-and-pijuice-fixing","title":"RPi and PiJuice fixing","text":"<p>If you don't already have a Raspberry Pi Zero 2 W with attached header, you will have to solder a header to it. Before doing that, make sure to stick the heatsink on the CPU of your Raspberry. This will keep the header sitting flush against the Raspberry Pi as you solder it. If this is your first time soldering, you can find detailed instructions here. As alternative to soldering the header, you could also use a Hammer Header.</p> <p>After attaching the CPU heatsink and soldering or hammering the header, your Raspberry Pi should look like this:</p> <p></p> <p></p> <p>Now we can put the stacking header on top of the freshly soldered header.</p> <p></p> <p>The Raspberry Pi is now prepared to be attached to the mounting plate together with the PiJuice Zero pHAT. For this, we will need the 10 mm and 20 mm spacer bolts, as well as the four screws and nuts that came with the bolts.</p> <p></p> <p>We are going to put the smaller 10 mm spacer bolts into the four holes we previously drilled.</p> <p></p> <p>Then fasten the bolts with the nuts at the backside of the mounting plate. But don't tighten them yet! We will need a little bit of space to align the components on the other side of the mounting plate in the following steps.</p> <p></p> <p>Place your Raspberry Pi on top of the spacer bolts. Make sure that the ports are pointing towards the edge of the mounting plate.</p> <p></p> <p>You can now screw the longer 20 mm spacer bolts into the 10 mm bolts to fix the Raspberry Pi to the mounting plate. Don't tighten too much as we will need some space to align everything later.</p> <p></p> <p>In the last step, connect the PiJuice Zero pHAT to the GPIO pins of the RPi stacking header. If you have trouble with this, you can check if some of the pins are not properly aligned and adjust them carefully before trying again. Finally, fasten the screws on top of the PiJuice board and properly tighten all bolts and the nuts on the backside of the mounting plate.</p> <p></p>"},{"location":"hardware/buildinstructions_hardware/#inserting-the-mounting-plate","title":"Inserting the mounting plate","text":"<p>Before inserting the mounting plate into the enclosure, the four cable ties have to be aligned with the positions where the batteries will be. If you only have shorter cable ties, you can connect two ties for extension. Bend the cable ties at 12 cm, measured from the head of the cable tie (right side in image). Put them into the enclosure, between the mounting threads as shown in the following image, and bend the cable ties at the other side of the enclosure bottom.</p> <p></p> <p>Insert the mounting plate into the enclosure while keeping the cable ties in position. Screw the plate to the enclosure with the included screws.</p> <p></p>"},{"location":"hardware/buildinstructions_hardware/#integrating-the-batteries","title":"Integrating the batteries","text":"<p>The Voltaic V50 battery has an integrated over temperature protection, which means that it will stop charging at 45 \u00b0C. To improve the heat dissipation, you can attach two heatsinks to the top of the battery and stick the battery to the mounting plate with a thermal pad. This step is recommended if your camera trap will be exposed to high temperatures in summer.</p> <p></p> <p></p> <p></p> <p>Plug the micro USB adapter into the male port of the solar panel extension cable and connect it to the battery.</p> <p></p> <p>Now you can integrate the battery into the enclosure and put the female end of the extension cable through the opened cable gland. While the two cable ties should be sufficient to keep the battery in place even if you are not using the thermal pad, you could use two small pieces of double-sided tape or velcro strips to more securely attach the batteries to the mounting plate.</p> <p></p> <p>Push the female port of the solar panel extension cable through the cable gland until the overmold is approximately \u2154 of the way in. Tighten the sealing nut properly to make sure that the enclosure will be waterproof.</p> <p></p> <p></p> <p>Optionally, you can stick the PiJuice battery to the mounting plate with the second thermal pad or some double-sided tape/velcro strips.</p> <p></p> <p></p> <p>Now that all of the hardware components are integrated into the enclosure, we will connect everything in the next step before tightening the cable ties.</p>"},{"location":"hardware/buildinstructions_hardware/#connecting-everything","title":"Connecting everything","text":"<p>Plug the angled micro USB to USB A adapter into the micro USB port of the Raspberry Pi Zero 2 W. This adapter is necessary to connect the OAK-1 USB cable.</p> <p></p> <p>Connect the PiJuice battery with the PiJuice Zero pHAT. Please make sure that the holes for the connection pins are facing downwards.</p> <p></p> <p>In the next step, we will connect the solar panel battery to the PiJuice Zero pHAT with the angled USB A to micro USB cable. Now you could already connect the solarpanel, but if you want to continue with the following steps for mounting the camera trap, it is recommended to connect the solar panel only at the end of the mounting process.</p> <p></p> <p>Now that everything is in place, tighten the cable ties to keep the batteries secure, as the enclosure will be turned over for mounting. Cut off or bend the protruding ends after tightening.</p> <p></p> <p>In the last step, connect the OAK-1 camera to the micro USB adapter in the Raspberry Pi with the USB 3 Type-A to Type-C cable, which was included in the OAK-1 package.</p> <p></p> <p></p> <p>If you are going for the Minimal Setup you are now finished! Don't close the lid yet, as we need to set up the software in the next steps. If you want to build the Full Setup, continue with the next step for mounting of the camera trap and flower platform.</p>"},{"location":"hardware/buildinstructions_mounting/","title":"Mounting Setup","text":""},{"location":"hardware/buildinstructions_mounting/#mounting-setup","title":"Mounting Setup","text":""},{"location":"hardware/buildinstructions_mounting/#what-you-will-need","title":"What you will need","text":"Required tools &amp; components <ol> <li>Ruler + Permanent Marker</li> <li>Drilling machine</li> <li>Metal Drill Bit 4 mm</li> <li>Allen wrench 3 mm</li> <li>Metal saw</li> <li>HPL Sheet (4 mm) 350x250 mm</li> <li>4x M4 20 mm Screws (internal hexagon)</li> <li>21x M4 Hex Nuts</li> <li>Aluminium Square Tube (23.5x23.5 mm), 1.5 m</li> <li>7x M4 40 mm Screws</li> <li>2x M4 60 mm Screws</li> <li>18x Flat Washer (e.g. M4 15 mm)</li> <li>Pipe Clamp (60.3mm) 70 mm + screws &amp; nuts</li> <li>Pipe Clamp (60.3 mm) 350 mm + screws &amp; nuts</li> <li>Flower Platform (e.g. 500x280 mm)</li> <li>Solar Panel Bracket, Medium (optional)</li> </ol>"},{"location":"hardware/buildinstructions_mounting/#drilling-the-hpl-sheet","title":"Drilling the HPL sheet","text":"<p>We are going to start by marking the four positions where the enclosure will be fixed in the center of the HPL sheet and the three positions where the aluminium tube and pipe clamp will be attached for mounting on a tubular post. Place the enclosure on the marks and look through the holes in the enclosure to check their correct position before drilling.</p> <p></p> <p>Drill the seven 4 mm holes at the marked positions with a 4 mm metal drill bit. The drilling might take some time, as HPL is a very dense material.</p> <p></p> <p></p>"},{"location":"hardware/buildinstructions_mounting/#enclosure-to-hpl-connection","title":"Enclosure to HPL connection","text":"<p>Now that we have prepared the HPL sheet, we can put the four M4 20 mm screws through the holes of the enclosure for fixing it to the HPL sheet.</p> <p></p> <p>Be sure to keep the M4 screws in place with the 3 mm allen wrench, while tightening them with two of the M4 hex nuts per screw. This will allow air to flow between the enclosure and the HPL sheet to increase heat dissipation.</p> <p></p> <p></p> <p>After the four M4 screws are fixed with the eight hex nuts, we can put them through the holes of the HPL sheet. Please make sure that the cable gland is pointing towards the other three holes.</p> <p></p> <p>Now you can fasten the hex nuts on the other side of the HPL sheet to securely attach the enclosure to it.</p> <p></p>"},{"location":"hardware/buildinstructions_mounting/#attaching-the-aluminium-tube","title":"Attaching the aluminium tube","text":"<p>We are going to attach a 250 mm piece of the aluminium tube to the short side of the HPL sheet, which will serve as connection for the pipe clamp. Put your aluminium tube flush on the HPL sheet and make sure that the openings line up with the holes in the HPL sheet to put the screws through in the next step. Now you can draw a marking line at the correct position, to saw the aluminium tube to the required length.</p> <p></p> <p>For the kind of aluminium tube that we are using in this example, with a material thickness of 1.5 mm, a small metal saw is sufficient to cut the tube to the required length of 250 mm.</p> <p></p> <p>To attach the 250 mm piece of aluminium tube to the HPL sheet, we will need three of the M4 40 mm screws and hex nuts, as well as six of the flat washers. Put a washer under each of the screws and under each of the hex nuts to ensure a good stability.</p> <p></p> <p></p>"},{"location":"hardware/buildinstructions_mounting/#attaching-the-pipe-clamp","title":"Attaching the pipe clamp","text":"<p>In the last step, we are going to attach the pipe clamp to the aluminium tube, to later mount the camera trap on a tubular post.</p> <p></p> <p>Use two of the M4 40 mm screws and hex nuts together with four of the washers (one on each side) to fix the pipe clamp to the aluminium tube.</p> <p></p> <p>Your ready-to-mount camera trap should look like this:</p> <p></p>"},{"location":"hardware/buildinstructions_mounting/#preparing-the-flower-platform","title":"Preparing the flower platform","text":"<p>You can download the PDF templates for two different sizes of the flower platform at the <code>insect-detect-docs</code> GitHub repo. You will also find the Inkscape .svg files in the same folder, which you can use as template for your own platform design.</p> <p>The bigger platform (500x280 mm) should be mounted at a distance of 40 cm from camera to platform, the smaller platform (350x200 mm) should be mounted at a distance of 28 cm from camera to platform. This will ensure that the flower platform fills out the whole frame of the OAK-1 camera when using 1080p/4K resolution for the HQ frames. Using the smaller platform at a lower distance will result in a higher resolution of the cropped insect images and is recommended for most use cases.</p> <p>If you want to use different platform sizes or distances from camera to your platform or other background, the aspect ratio of the frame where insects will be detected (for 1080p/4K resolution: ~1:1.78) should be considered for planning.</p> <p>It is recommended to print the templates on a weather- and UV-resistant material, e.g. lightweight foam board or acrylic glass.</p> <p>Drill two 4 mm holes at the center of the short sides of your flower platform. For the bigger platform (500x280 mm), mark the positions for drilling at 140 mm, measured from the long side (280 mm / 2) and at 12 mm, measured from the short side (23.5 mm wide aluminium tube / 2).</p> <p></p> <p>For the smaller platform (350x200 mm), the positions for drilling should be marked at 100 mm, measured from the long side (200 mm / 2) and at 12 mm, measured from the short side (23.5 mm wide aluminium tube / 2).</p> <p></p> <p>To build the frame, which will hold the flower platform and can be adjusted to different platform sizes, we will need one aluminium tube with the length of the long side of your biggest platform (in our case 500 mm) and two aluminium tubes with a length of about 350-400 mm. If you have a 750 mm piece left from the 1 m tube of which you saw off the 250 mm piece for the HPL plate mounting, you can just cut this leftover piece in half to get 2x 375 mm tube pieces, which will have the optimal length.</p> <p></p> <p>First, we are going to place the longer piece of aluminium tube on top of the two shorter pieces and connect them with the two M4 60 mm screws, two M4 nuts and four washers. Don't tighten too much yet, as we will have to align everything at the end.</p> <p></p> <p></p> <p>After the frame is prepared, place the flower platform on top of the two short tube pieces and align them with the holes you drilled. If your are using the same platform dimension and pipe clamps as in this example, you can already adjust the platform at 55 mm, measured from the aluminium tube to the platform. For the smaller platform (350x200 mm) this distance should be 115 mm. Attach the platform to the shorter aluminium tubes with two M4 40 mm screws, two M4 nuts and four washers.</p> <p></p> <p></p> <p>Now all we have to do is to connect the pipe clamp with two M4 40 mm screws, two M4 nuts and four washers for mounting the platform on a wooden/steel post. Make sure to align the pipe clamp center with the center of your long aluminium tube piece.</p> <p></p> <p></p> <p>You can now mount the platform on any standard wooden or steel post. Tighten the screws after you checked the correct position. If possible, slightly tilt the post and camera trap system forwards, that rainwater can run off the platform.</p> <p></p> <p>If you want to change the bigger platform with the smaller platform, you only have to adjust the smaller aluminium tube pieces and decrease the distance from camera (= enclosure) to the platform to 28 cm.</p> <p></p>"},{"location":"hardware/buildinstructions_mounting/#mounting-the-solar-panel","title":"Mounting the solar panel","text":"<p>It is recommended to orient the camera trap and flower platform towards the south to optimize the efficiency of the solar panel. You can also use an app or a website to find the path of the sun at your location for a specific time of year. Check out this blog article for more information on how to estimate the potential generated power of your solar panel depending on your location and time of year.</p> <p>There are many possible DIY solutions to mount the solar panel at the best angle for your location. In our case this is about 30\u00b0 (southwestern Germany). In the following picture, we used two wooden wedges fixed with some double-sided tape.</p> <p></p> <p>If you want a prettier mounting solution, you can get the medium mounting bracket, which will fit perfectly for the 6V 9W Voltaic panel and allow more airflow above the enclosure to potentially keep it cooler during hot days.</p> <p></p> <p>If you are using the 500x280 mm platform, make sure that the distance between the camera (measured from the enclosure) and the flower platform surface is 40 cm. For the smaller 350x200 mm platform, the distance between camera and platform should be 28 cm. With these distances and platform sizes, the frame of the camera sensor in which insects are detected will be completely filled out by the platform. This will make sure that insects can not move in and out of the frame while walking on the platform, as the object tracker counts every insect coming back into the frame as new individual (new tracking ID).</p> <p></p> <p>After that your Insect Detect DIY camera trap for automated insect monitoring is finished! Let's move on to the next steps and set up the Software.</p> <p></p>"},{"location":"hardware/buildinstructions_overview/","title":"Overview","text":""},{"location":"hardware/buildinstructions_overview/#building-instructions-overview","title":"Building Instructions: Overview","text":"Disclaimer <p>Every effort has been made to check the instructions for accuracy and completeness. However, the author cannot be held responsible for any errors or omissions. The readers remain responsible for their safety when using the tools, hardware and software described in the instructions for building and deploying the Insect Detect camera trap. The readers must also comply with all applicable laws and regulations regarding the deployment of the camera trap system including the associated software and deep learning models. The author of these instructions cannot be held responsible for the results of action, inaction, or otherwise taken as a consequence of the information provided in the instructions. All products, brands and product links to any online shops are mentioned for illustration purposes only and do not denote a commercial relationship between the author and the products/brands/shops.</p> <p>The following instructions will enable you to reproduce the Full Setup of the Insect Detect DIY camera trap for automated insect monitoring. If you only want to assemble the Minimal Setup, plug the solar panel micro USB output directly into the PiJuice Zero pHAT and skip the last steps for mounting the camera trap and flower platform.</p> Required tools &amp; equipment Full SetupMinimal Setup <ol> <li>Ruler + Permanent Marker</li> <li>Drilling machine</li> <li>Metal Drill Bit 3 mm &amp; 4 mm</li> <li>Metal Step Drill Bit (with 14 and 20 mm step)    (e.g. Amazon)</li> <li>Crepe tape</li> <li>Sealing glue (e.g. Amazon)</li> <li>Scissors</li> <li>14 mm Hole Punch (e.g. Amazon)</li> <li>Hammer</li> <li>Soldering Iron (+ Solder) or     Hammer Header     (if you buy a Raspberry Pi without header)</li> <li>Pliers</li> <li>Allen wrench 3 mm</li> <li>Metal saw</li> </ol> <ol> <li>Ruler + Permanent Marker</li> <li>Drilling machine</li> <li>Metal Drill Bit 3 mm</li> <li>Metal Step Drill Bit (with 14 and 20 mm step)     (e.g. Amazon)</li> <li>Crepe tape</li> <li>Sealing glue (e.g. Amazon)</li> <li>Scissors</li> <li>14 mm Hole Punch (e.g. Amazon)</li> <li>Hammer</li> <li>Soldering Iron (+ Solder) or     Hammer Header     (if you buy a Raspberry Pi without header)</li> <li>Pliers</li> </ol>"},{"location":"hardware/buildinstructions_overview/#tools-and-components-that-you-will-need-for-each-step","title":"Tools and components that you will need for each step","text":""},{"location":"hardware/buildinstructions_overview/#preparing-the-enclosure","title":"Preparing the enclosure","text":"Required tools &amp; components <ol> <li>Ruler + Permanent Marker</li> <li>Drilling machine</li> <li>Metal Drill Bit 3 mm</li> <li>Metal Step Drill Bit (with 14 and 20 mm step)</li> <li>Crepe tape</li> <li>Sealing Glue</li> <li>Scissors</li> <li>14 mm Hole Punch</li> <li>Hammer</li> <li>Fibox TM 1625 Mounting Plate</li> <li>Fibox PC 162513 Enclosure</li> <li>Cable Gland + Locknut PG 13.5</li> <li>Acrylic Glas (2 mm) 40x40 mm</li> <li>EPDM Sealing Strip 20x5 mm</li> </ol>"},{"location":"hardware/buildinstructions_overview/#integrating-the-hardware","title":"Integrating the Hardware","text":"Required tools &amp; components <ol> <li>Soldering Iron (+ Solder) or Hammer Header</li> <li>Pliers</li> <li>6x Cable Tie Mount</li> <li>6x Stainless Steel Cable Ties</li> <li>1x releasable Cable Tie</li> <li>Silica Gel Pack 50 g</li> <li>OAK-1 (OpenCV AI Kit)</li> <li>Raspberry Pi Zero 2 W (+ microSD card)</li> <li>RPi CPU Heatsink</li> <li>RPi Header</li> <li>RPi Stacking Header</li> <li>RPi Spacer Bolts 10 mm</li> <li>RPi Spacer Bolts 20 mm</li> <li>PiJuice Zero UPS pHAT</li> <li>Solar Panel Extension Cable, 1 ft</li> <li>Voltaic 12,800mAh Li-Ion Battery (Full Setup only)</li> <li>2x Thermal Pad (1 mm) 50x50 mm (optional)</li> <li>2x Heatsink 40x30 mm (optional)</li> <li>Solar Panel Micro USB Adapter</li> <li>PiJuice 12,000mAh LiPo Battery</li> <li>Micro USB to USB A Adapter, angled</li> <li>USB A to micro USB cable, 20 cm, angled (Full Setup only)</li> <li>Solar Panel 6V 9W</li> </ol>"},{"location":"hardware/buildinstructions_overview/#mounting-setup","title":"Mounting setup","text":"<p>Only necessary for the Full Setup.</p> Required tools &amp; components <ol> <li>Ruler + Permanent Marker</li> <li>Drilling machine</li> <li>Metal Drill Bit 4 mm</li> <li>Allen wrench 3 mm</li> <li>Metal saw</li> <li>HPL Sheet (4 mm) 350x250 mm</li> <li>4x M4 20 mm Screws (internal hexagon)</li> <li>21x M4 Hex Nuts</li> <li>Aluminium Square Tube (23.5x23.5 mm), 1.5 m</li> <li>7x M4 40 mm Screws</li> <li>2x M4 60 mm Screws</li> <li>18x Flat Washer (e.g. M4 15 mm)</li> <li>Pipe Clamp (60.3mm) 70 mm + screws &amp; nuts</li> <li>Pipe Clamp (60.3 mm) 350 mm + screws &amp; nuts</li> <li>Flower Platform (e.g. 500x280 mm)</li> <li>Solar Panel Bracket, Medium (optional)</li> </ol>"},{"location":"hardware/components/","title":"Components","text":""},{"location":"hardware/components/#components","title":"Components","text":"<p>Choose your Hardware Setup</p> <p>Depending on your field of application, several variations of the hardware setup with different scopes and required components are possible. Three setups are presented in the following, but you can always create your own!</p>"},{"location":"hardware/components/#full-setup","title":"Full Setup","text":"<p>For a total cost of about 700 \u20ac, the full hardware setup includes all necessary components for continuous automated monitoring of insects in the field during a whole season with the proposed flower platform as background.</p> <p>With a microSD card size of 256 GB, about 30-50 million images of individual insects (cropped detections) can be stored, depending on the resolution of the synchronized HQ frames and the distance from camera to platform. Two batteries with a combined capacity of ~91Wh enable a continuous monitoring of about 20 hours (e.g. 4 hours/day for 5 days), even if no sunlight is available to charge the batteries. The weatherproof enclosure which contains all electronic components is attached to a HPL sheet and can be mounted on a steel or wooden post with a standard pipe clamp. The flower platform can be printed with the provided PDF templates or with your custom design and is mounted on the same post.</p>"},{"location":"hardware/components/#minimal-setup","title":"Minimal Setup","text":"<p>For a total cost of about 530 \u20ac, the minimal hardware setup includes all necessary components for continuous automated monitoring of insects in the field with decreased storage/battery capacity and a custom mounting option.</p> <p>Due to a smaller microSD card size of 32 GB, recorded images and data have to be collected more frequently. The single battery with a capacity of 12,000mAh enables a continuous monitoring of about 9 hours, even if no sunlight is available to charge it. The flower platform and components for mounting the camera trap are not included, it is assumed that you want to try your own ideas, e.g. set up the camera trap on a tripod and focus it on a different background.</p>"},{"location":"hardware/components/#test-setup","title":"Test Setup","text":"<p>If you only want to test the basic hardware and software capabilities in the lab, for about 187 \u20ac you can already get started. As there is no PiJuice Zero pHAT and battery included in this setup, an additional power supply will be necessary.</p>"},{"location":"hardware/components/#list-of-components","title":"List of components","text":"Component costs <p>All prices are shown with 19% VAT (for Germany) and without shipping costs. Depending on your country the VAT may differ and additional shipping costs may increase the total cost of the components.</p> <p>The prices for specific components may change and this list is only a snapshot in time (October 2023).</p> OAK USB cable <p>A USB 3 Type-A to Type-C cable is normally included in the OAK-1 kit and is therefore not listed in the components.</p> Full SetupMinimal SetupTest Setup Component Price Product Link OAK-1 Auto-Focus (OpenCV AI Kit) 145.99 \u20ac e.g. Luxonis shop or Mouser Raspberry Pi Zero 2 W ~22.00 \u20ac rpilocator Micro SDXC card 256 GB 28.99 \u20ac e.g. Conrad Micro USB to USB A adapter, angled 5.50 \u20ac e.g. Reichelt USB A to micro USB cable, 20 cm, angled 5.60 \u20ac e.g. Reichelt RPi CPU Heatsink 1.20 \u20ac e.g. Reichelt RPi Header 0.95 \u20ac e.g. Reichelt RPi Stacking Header 1.60 \u20ac e.g. Reichelt RPi Spacer Bolts 10 mm 3.50 \u20ac e.g. Reichelt RPi Spacer Bolts 20 mm 2.60 \u20ac e.g. Reichelt 2x Thermal Pad (1 mm) 50x50 mm (optional) 4.79 \u20ac x2 e.g. Conrad PiJuice Zero UPS pHAT 54.23 \u20ac e.g. Pi Supply or Distrelec PiJuice 12,000mAh LiPo Battery 39.40 \u20ac e.g. Pi Supply or Distrelec Fibox PC 162513 Enclosure 89.99 \u20ac e.g. Conrad or Distrelec Fibox TM 1625 Mounting Plate 7.49 \u20ac e.g. Conrad or Distrelec Cable Gland PG 13.5 0.99 \u20ac e.g. Reichelt Cable Gland PG 13.5 Locknut 0.27 \u20ac e.g. Reichelt 8x Stainless Steel Cable Tie 3.90 \u20ac e.g. Reichelt 6x Cable Tie Mount 0.99 \u20ac x6 e.g. Reichelt Acrylic Glas (2 mm) 40x40 mm ~5.00 \u20ac e.g. S-Polytec EPDM Sealing Strip 20x5 mm 6.25 \u20ac e.g. Amazon Silica Gel Pack 50 g 15.99 \u20ac e.g. Amazon Solar Panel 6V 9W 98.30 \u20ac e.g. Voltaic Systems or Kiwi Electronics Solar Panel Bracket, Medium (optional) 11.75 \u20ac e.g. Voltaic Systems or Kiwi Electronics Solar Panel Extension Cable, 1 ft ~7.00 \u20ac e.g. Voltaic Systems or Funky Leisure Solar Panel Micro USB Adapter 3.88 \u20ac e.g. Voltaic Systems or Kiwi Electronics Voltaic 12,800mAh Li-Ion Battery 83.55 \u20ac e.g. Voltaic Systems or Kiwi Electronics 2x Heatsink 40x30 mm (optional) 2.35 \u20ac x2 e.g. Reichelt HPL Sheet (4 mm) 350x250 mm ~5.00 \u20ac e.g. HPL shop Aluminium Square Tube (23.5x23.5 mm), 1.5 m ~16.00 \u20ac Local hardware store (e.g. Bauhaus) 4x M4 20 mm Screws (internal hexagon) ~2.00 \u20ac Local hardware store 7x M4 40 mm Screws ~3.00 \u20ac Local hardware store 2x M4 60 mm Screws ~2.00 \u20ac Local hardware store 21x M4 Hex Nuts ~3.00 \u20ac Local hardware store 18x Flat Washer (e.g. M4 15 mm) ~3.00 \u20ac Local hardware store (e.g. Bauhaus) Pipe Clamp (60.3 mm) 70 mm + screws &amp; nuts 5.09 \u20ac e.g. Traffic sign shop Pipe Clamp (60.3 mm) 350 mm + screws &amp; nuts 7.81 \u20ac e.g. Traffic sign shop Flower Platform (e.g. 350x200 mm) ~17.00 \u20ac e.g. Lightweight foam board or Acrylic glass Total cost ~704 \u20ac Total cost with optional components ~730 \u20ac Component Price Product Link OAK-1 (OpenCV AI Kit) 145.99 \u20ac e.g. Luxonis shop or Mouser Raspberry Pi Zero 2 W ~22.00 \u20ac rpilocator Micro SDHC Card 32 GB 8.95 \u20ac e.g. Reichelt Micro USB to USB A Adapter, angled 5.50 \u20ac e.g. Reichelt RPi CPU Heatsink 1.20 \u20ac e.g. Reichelt RPi Header 0.95 \u20ac e.g. Reichelt RPi Stacking Header 1.60 \u20ac e.g. Reichelt RPi Spacer Bolts 10 mm 3.50 \u20ac e.g. Reichelt RPi Spacer Bolts 20 mm 2.60 \u20ac e.g. Reichelt Thermal Pad (1 mm) 50x50 mm (optional) 4.79 \u20ac e.g. Conrad PiJuice Zero UPS pHAT 54.23 \u20ac e.g. Pi Supply or Distrelec PiJuice 12,000mAh LiPo Battery 39.40 \u20ac e.g. Pi Supply or Distrelec Fibox PC 162513 Enclosure 89.99 \u20ac e.g. Conrad or Distrelec Fibox TM 1625 Mounting Plate 7.49 \u20ac e.g. Conrad or Distrelec Cable Gland PG 13.5 0.99 \u20ac e.g. Reichelt Cable Gland PG 13.5 Locknut 0.27 \u20ac e.g. Reichelt 6x Stainless Steel Cable Tie 3.90 \u20ac e.g. Reichelt 6x Cable Tie Mount 0.99 \u20ac x6 e.g. Reichelt Acrylic Glas (2 mm) 40x40 mm ~5.00 \u20ac e.g. S-Polytec EPDM Sealing Strip 20x5 mm 6.25 \u20ac e.g. Amazon Silica Gel Pack 50 g 15.99 \u20ac e.g. Amazon Solar Panel 6V 9W 98.30 \u20ac e.g. Voltaic Systems or Kiwi Electronics Solar Panel Bracket, Medium (optional) 11.75 \u20ac e.g. Voltaic Systems or Kiwi Electronics Solar Panel Extension Cable, 1 ft ~7.00 \u20ac e.g. Voltaic Systems or Funky Leisure Solar Panel Micro USB Adapter 3.88 \u20ac e.g. Voltaic Systems or Kiwi Electronics Total cost ~531 \u20ac Total cost with optional components ~547 \u20ac Component Price Product Link OAK-1 (OpenCV AI Kit) 145.99 \u20ac e.g. Luxonis shop or Mouser Raspberry Pi Zero 2 W ~22.00 \u20ac rpilocator Micro SDHC Card 32 GB 8.95 \u20ac e.g. Reichelt RPi Micro USB Adapter 1.85 \u20ac e.g. Reichelt RPi Power Supply 7.99 \u20ac e.g. Reichelt Total cost ~187 \u20ac"},{"location":"modeltraining/annotation/","title":"Annotation","text":""},{"location":"modeltraining/annotation/#annotation","title":"Annotation","text":"<p>To train CNN models which objects to detect where in an image (detection/localization) and what these objects are (classification), you will first have to annotate/label the objects of interest manually to generate a training dataset.</p>"},{"location":"modeltraining/annotation/#annotation-tools","title":"Annotation tools","text":"<p>Various open and closed source tools are available, working offline on your PC or via an online platform in your browser. These tools have different pricing plans, but most of them can be used for free with usage limits or for education/academia. All of them will give you the basic functionalities of annotating images for object detection (bounding boxes) or image classification (image label). Some are simple, others are more complex and can provide additional functions such as AutoML (\"one-click model training\") or model assisted labeling.</p> <p>Some widely used annotation tools are:</p> <ul> <li>Roboflow</li> <li>CVAT</li> <li>Label Studio</li> <li>Supervisely</li> <li>labelme</li> <li>SuperAnnotate</li> <li>Hasty</li> <li>V7 Labs</li> <li>Labelbox</li> </ul>"},{"location":"modeltraining/annotation/#roboflow","title":"Roboflow","text":"<p>Because of its free public plan, direct connection to a repository for open source datasets and ease of use with many helpful functions, we chose Roboflow to annotate our images. The Roboflow Python package makes it easy to automatically upload annotated datasets, e.g. when using a Google Colab notebook as training environment.</p> <p>If you are new to image annotation and dataset management, take a look at the Roboflow documentation, especially for the Annotate tool. Carefully read the best practices for image labeling, as a dataset with optimally labeled images can significantly increase model performance and accuracy.</p> <p>The dataset health check can give you a quick overview of your current dataset and show possible problems, e.g. regarding class imbalance. With different image preprocessing steps, you can easily modify your dataset in multiple ways (e.g. resize, modify classes). Image augmentations can diversify your dataset, e.g. by applying image rotation, exposure or blur. Multiple datasets can be generated in this way from the same annotated source images. These datasets can then be exported in all common formats and downloaded either as .zip file or used to generate a link to upload the dataset, e.g. into a Google Colab model training notebook.</p> <p> </p> Roboflow Annotate, a simple Browser-based GUI for annotating               images, e.g. for object detection (bounding boxes)"},{"location":"modeltraining/train_classification/","title":"Image Classification","text":""},{"location":"modeltraining/train_classification/#image-classification-model-training","title":"Image classification model training","text":"<p>The recommended processing pipeline uses a detection model with only one generic class (\"insect\"). The low input resolution enables a high inference speed, which is necessary to reliably track moving/flying insects. Images of the detected and tracked insects are cropped from synchronized HQ frames in real time.</p> <p>By using the provided recording script, for automated monitoring, cropped detections of individual insects are saved as .jpg files and relevant metadata is saved to .csv for each recording session. The insect images can be classified in a subsequent step on your local PC, by using a classification model exported to ONNX format for faster CPU inference.</p> <p>Read the classification instructions for more info on how to deploy your classification model.</p>"},{"location":"modeltraining/train_classification/#yolov5","title":"YOLOv5","text":"<p>Since release v6.2, classification model training and deployment is supported by YOLOv5.</p> <p>To train your own image classification model, you can select between YOLOv5-cls, ResNet and EfficientNet classification models, pretrained on the ImageNet-1k dataset. An EfficientNet-B0 model is provided in the <code>insect-detect-ml</code> GitHub repo.</p> <ul> <li> <p>YOLOv5 classification model training </p> <p>The notebook for classification model training includes export   to ONNX format for faster CPU inference.</p> </li> </ul> <p>Check the introduction and features overview, if this is your first time using a Colab notebook.</p>"},{"location":"modeltraining/train_detection/","title":"Object Detection","text":""},{"location":"modeltraining/train_detection/#object-detection-model-training","title":"Object detection model training","text":"<p>YOLO (You Only Look Once) (Redmon et al., 2016) is the first object detection model which combines object detection (bounding box prediction) and classification (associated class probabilities) into a single neural network. This new approach makes the model very fast and enables its use for real-time inference, even on resource-constrained hardware. After the first release, several new YOLO versions improved the initial model and formed the YOLO family.</p> <p>Check out the provided Python scripts and the recommended processing pipeline for more information on how to deploy your custom trained detection model.</p>"},{"location":"modeltraining/train_detection/#yolov5","title":"YOLOv5","text":"<p>YOLOv5n is the most recommended model for the DIY camera trap at the moment.</p> <p>YOLOv5 (Jocher, 2020) is probably the most popular YOLO version, including models for object detection (architecture summary), image classification and instance segmentation.</p> <p>It is highly recommended to read the tips for best training results if this is your first time training a detection model. Most of these tips are also relevant if you choose a different YOLO version.</p> <ul> <li> <p>YOLOv5 detection model training </p> <p>The PyTorch model weights can be converted to .blob   format at tools.luxonis.com for on-device inference   with the Luxonis OAK devices.</p> </li> </ul> <p>Check the introduction and features overview if this is your first time using a Colab notebook.</p> <p> </p> Train your own YOLOv5 object detection model with the provided               Google Colab notebook without having to write any code"},{"location":"modeltraining/train_detection/#yolov6","title":"YOLOv6","text":"<p>YOLOv6 (Li et al., 2022) is specifically tailored for industrial applications and implements several new features, including a efficient decoupled head, anchor-free detection and optimized loss functions which can increase model performance.</p> <ul> <li> <p>YOLOv6 detection model training </p> <p>The PyTorch model weights can be converted to .blob   format at tools.luxonis.com for on-device inference   with the Luxonis OAK devices.</p> </li> </ul>"},{"location":"modeltraining/train_detection/#yolov7","title":"YOLOv7","text":"<p>YOLOv7 (Wang et al., 2022) implements new features, e.g. Extended-ELAN (E-ELAN) to enhance the learning ability of the network, improved model scaling techniques and re-parameterized convolution which can further increase model performance.</p> <ul> <li> <p>YOLOv7 detection model training </p> <p>The PyTorch model weights can be converted to .blob   format at tools.luxonis.com for on-device inference   with the Luxonis OAK devices.</p> </li> </ul>"},{"location":"modeltraining/train_detection/#yolov8","title":"YOLOv8","text":"<p>YOLOv8 by Ultralytics, the developers behind YOLOv5, claims to reach the current state-of-the-art performance by integrating new features, including anchor-free detection and a new backbone network and loss function. A big difference to other YOLO models are the developer-friendly options, such as the integrated command-line interface (CLI) and Python package.</p> <ul> <li> <p>YOLOv8 detection model training </p> <p>The PyTorch model weights can be converted to .blob   format at tools.luxonis.com for on-device inference   with the Luxonis OAK devices.</p> </li> </ul>"},{"location":"software/","title":"Software","text":""},{"location":"software/#software","title":"Software","text":"<p>In the Software section, we will start by installing some software on your local PC that is required to set up the Raspberry Pi, communicate with it and work with Python scripts.</p> <p>In Raspberry Pi Setup, all steps to set up the Raspberry Pi, Power Managers and associated software are explained in detail.</p> <p>The Usage section gives intructions on custom configuration and how to use the scripts for live preview and automated recording.</p>"},{"location":"software/localsetup/","title":"Local Setup","text":""},{"location":"software/localsetup/#local-setup","title":"Local Setup","text":"Local OS <p>The following instructions and software were only tested on a Windows 11 computer. For macOS or Linux users, some steps and software versions might be different. If you run into any problems with the software setup, please post an issue to the GitHub repo.</p>"},{"location":"software/localsetup/#raspberry-pi-imager","title":"Raspberry Pi Imager","text":"<p>Download Raspberry Pi Imager and install it to your computer. We will use it to set up the microSD card with Raspberry Pi OS and do some initial configuration.</p>"},{"location":"software/localsetup/#visual-studio-code","title":"Visual Studio Code","text":"<p>Download Visual Studio Code and install it to your computer. Install the following extensions:</p> <ul> <li>Python   to work with Python scripts.</li> <li>SSH FS   to access the Raspberry Pi file explorer.</li> <li>Rainbow CSV and/or   Excel Viewer   for a more readable preview of the generated .csv files.</li> </ul>"},{"location":"software/localsetup/#python","title":"Python","text":"<p>Download Python 3.12.10 and install it to your computer (3.13 is not yet supported by some packages). Select Install Now with the checkbox <code>Add Python to PATH</code> activated. Run <code>Disable path length limit</code> at the end of the installation to remove the MAX_PATH limitation.</p> <p>You will need Python to run the scripts for classification of the captured insect images and subsequent metadata post-processing.</p> <p>We are going to use the Python Launcher for Windows to run Python scripts with the <code>py</code> command. You can check if the Python Launcher works correctly and display the installed Python version(s), by opening a Terminal (e.g. Windows PowerShell) and running:</p> <pre><code>py --list\n</code></pre> <p>After installing the Python extension, activate Python in VS Code by opening the Command Palette with Ctrl+Shift+P and running the <code>Python: Select Interpreter</code> command. You can find more information including a tutorial at Python in Visual Studio Code.</p>"},{"location":"software/localsetup/#diskinternals-linux-reader","title":"DiskInternals Linux Reader","text":"<p>Download DiskInternals Linux Reader and install it to your computer. You can use it to save data from the Raspberry Pi's microSD card to your local computer, as the Linux partition format is not compatible with Windows and you will only see the boot partition in your file explorer.</p> <p>Follow these steps to save the captured data to your computer:</p> <ul> <li>Insert the Raspberry Pi's microSD card into your card reader and start DiskInternals   Linux Reader. You will see two partitions on the microSD card: <code>rootfs</code> and <code>bootfs</code>.</li> <li>Open the <code>rootfs</code> partition and navigate to the <code>/home/pi</code> directory.</li> <li>Select the <code>insect-detect</code> directory and hit the Save button in the upper menu bar.</li> <li> <p>Keep the Save Files option, choose your output folder and select both options:</p> <p> Save directory structure</p> <p> Extract file date from metadata</p> </li> </ul>"},{"location":"software/pisetup/","title":"Raspberry Pi Setup","text":""},{"location":"software/pisetup/#raspberry-pi-setup","title":"Raspberry Pi Setup","text":""},{"location":"software/pisetup/#install-raspberry-pi-os","title":"Install Raspberry Pi OS","text":"<p>Insert the microSD card into your card reader and start the Raspberry Pi Imager.</p> <p>First, use <code>CHOOSE DEVICE</code> to select your Raspberry Pi model (<code>Raspberry Pi Zero 2 W</code> in our case). Continue with <code>CHOOSE OS</code> to select the operating system.</p> <p></p> <p>Go to <code>Raspberry Pi OS (other)</code> to show the Lite OS versions.</p> <p></p> <p>Select <code>Raspberry Pi OS Lite (32-bit)</code> (based on Debian 12 Bookworm with Python 3.11).</p> <p></p> <p>Continue with <code>CHOOSE STORAGE</code> and select your microSD card.</p> <p></p> <p>Hit <code>NEXT</code> and select <code>EDIT SETTINGS</code> to customize your OS setup.</p> <p></p> <p>Configure the following settings under the <code>GENERAL</code> tab:</p> <ul> <li><code>Set hostname</code>: For multiple camera traps, give each one a unique hostname.   Note the hostname, as you will need it to connect to the RPi via SSH.</li> <li><code>Set username and password</code>: Keep the default <code>pi</code> as username. Choose a   simple password (we won't use it after setting up SSH key based authentication   in the next step).</li> <li><code>Configure wireless LAN</code>: Enter your Wi-Fi credentials (e.g. 2.4 GHz   mobile hotspot).</li> <li>Select the correct <code>Wireless LAN country</code>.</li> <li> <p><code>Set locale settings</code> to your time zone and keyboard layout.</p> <p></p> </li> </ul> <p>Configure the following settings under the <code>SERVICES</code> tab:</p> <ul> <li>Activate <code>Enable SSH</code> and <code>Allow public-key authentication only</code>.</li> <li> <p>Hit <code>RUN SSH-KEYGEN</code> if you didn't already generate a SSH key pair before.   The public key will be automatically inserted in the text field.</p> <p></p> </li> </ul> <p>Keep the default settings under the <code>OPTIONS</code> tab and hit <code>SAVE</code>.</p> <p></p> <p>Hit <code>YES</code> to apply the customized OS settings. Confirm again with <code>YES</code> that all existing data on your microSD card will be erased when writing the image.</p> <p></p> <p>Insert the microSD card into the Raspberry Pi after the OS installation is finished.</p>"},{"location":"software/pisetup/#turn-on-raspberry-pi","title":"Turn On Raspberry Pi","text":"<p>If you are not using a power management board, insert a Micro-USB cable connected to a power supply, battery or laptop into the PWR IN Micro-USB input of the Raspberry Pi, which will trigger it to turn on. The first boot can take a little bit longer (up to 5 min).</p>"},{"location":"software/pisetup/#witty-pi-4-l3v7","title":"Witty Pi 4 L3V7","text":"<p>If you integrated the LED button, press it once to turn on the Raspberry Pi. If you don't have an external button, press the button on the Witty Pi board to turn on the Raspberry Pi.</p> <p> Green LED: battery fully charged indicator</p> <p> Blue LED: battery charging indicator</p> <p> Red LED: power indicator</p> <p> On/Off Button</p> <p></p> <p>If the red LED on the Witty Pi board is turned on, the Raspberry Pi is powered via the GPIO pins by either the USB-C input (if 5V battery pack is connected and charged) or the 3.7V battery pack (5V battery pack not connected or empty).</p> <p>After installing and configuring the Witty Pi software, the power to the Raspberry Pi will be cut 25 seconds after a shutdown command is received and the red LED will turn off.</p> <p>More info: Witty Pi 4 L3V7 User Manual</p> Red LED stays on <p>If the Raspberry Pi is turned off, but the red LED on the Witty Pi board still stays on after 25 seconds, the button will not be responsive as the Witty Pi assumes that the RPi is still turned on. This can happen if the Witty Pi software is not yet installed or if there is a problem with the GPIO connection (check for faulty solder joints). To make the Witty Pi responsive again, press and hold the button for 10 seconds until the red LED turns off.</p>"},{"location":"software/pisetup/#pijuice-zero","title":"PiJuice Zero","text":"<p>Turn on the Raspberry Pi with a short single press on the PiJuice SW1 button (marked green on the left side of the following picture).</p> <p>More info: PiJuice Buttons and LEDs</p> <p></p>"},{"location":"software/pisetup/#connect-rpi-via-ssh","title":"Connect RPi via SSH","text":"<p>You can connect to the RPi via SSH by using the hostname that you set during the RPi OS installation. If this does not work, you will have to use its IP address instead. There are several ways to find the RPi's IP address, one of the easiest solutions is to install the Fing App and scan the IP addresses of all devices in your Wi-Fi network.</p> <p>Open a new Terminal in VS Code. Use right-click to paste commands to the Terminal.</p> <p></p> <p>Connect to your Raspberry Pi via SSH by running:</p> <pre><code>ssh pi@insdet-cam01\n</code></pre> <p><code>pi</code> = username. <code>insdet-cam01</code> = hostname. Change it to the hostname that you set during the RPi OS installation.</p> <p>When you are asked if you want to continue connecting, type <code>yes</code> and hit Enter.</p>"},{"location":"software/pisetup/#add-rpi-file-explorer","title":"Add RPi File Explorer","text":"<p>We will use the SSH FS extension that you installed in Local Setup to mount a remote workspace folder (from Raspberry Pi) as a local workspace folder in VS Code. This makes working with files on the Raspberry Pi easier (e.g. editing Python scripts or showing metadata/logs/images).</p> <ul> <li> <p>Open the SSH FS extension and create a new configuration (<code>Name</code>: your RPi   hostname). Hit <code>Save</code> to start editing the configuration.</p> <p></p> </li> <li> <p>Configure the following fields and keep the rest empty:</p> <ul> <li><code>Host</code>: your RPi hostname</li> <li><code>Port</code>: <code>22</code> (should be the default)</li> <li><code>Root</code>: <code>~/</code> (will open the <code>/home/pi</code> directory)</li> <li><code>Username</code>: <code>pi</code></li> <li> <p><code>Private key</code>: hit <code>Prompt</code> and select the path to your SSH key (<code>id_rsa</code>)</p> <p></p> </li> </ul> </li> <li> <p>Hit <code>Save</code> at the bottom to save the configuration.</p> </li> <li> <p>Hit <code>Add as Workspace folder</code> to the right of your saved configuration to   mount the <code>/home/pi</code> directory from the Raspberry Pi in your local workspace.</p> <p></p> </li> <li> <p>Hit the blue SSH FS icon in the bottom left corner and select <code>Close Remote Workspace</code>   to close the workspace and disconnect from the Raspberry Pi (e.g. after shutdown).</p> <p></p> </li> </ul>"},{"location":"software/pisetup/#update-rpi","title":"Update RPi","text":"<p>We will start with updating the already installed software by running:</p> <pre><code>sudo apt update &amp;&amp; sudo apt full-upgrade\n</code></pre> <p>When you are asked if you want to continue, confirm with Y+Enter.</p> <p>Reboot the Raspberry Pi after all updates were successfully installed with:</p> <pre><code>sudo reboot\n</code></pre> <p>After the reboot you will have to establish a new SSH connection.</p>"},{"location":"software/pisetup/#configure-power-manager","title":"Configure Power Manager","text":"<p>The <code>insect-detect</code> software supports both the Witty Pi 4 L3V7 and PiJuice Zero as power management boards. With the new 2024 version of the hardware setup, the Witty Pi is used by default but can be easily exchanged with the PiJuice.</p>"},{"location":"software/pisetup/#configure-witty-pi-4-l3v7","title":"Configure Witty Pi 4 L3V7","text":"<ul> <li> <p>Install the Witty-Pi-4   software from the modified fork:</p> <pre><code>wget -qO- https://raw.githubusercontent.com/maxsitt/Witty-Pi-4/main/Software/install.sh | sudo bash\n</code></pre> </li> <li> <p>Reboot the Raspberry Pi after the software was successfully installed:</p> <pre><code>sudo reboot\n</code></pre> </li> <li> <p>Start the Witty Pi 4 configuration tool by running:</p> <pre><code>wittypi/wittyPi.sh\n</code></pre> </li> <li> <p>Type 3 in and hit Enter to synchronize the   RTC time with   your network time:</p> <p></p> No internet connection <p>If you are connected to the RPi hotspot and therefore are not able to get the network time due to the missing internet connection, first set the RPi system time to the current date + time manually by running:</p> <pre><code>sudo date -s \"2025-09-08 14:00:00\"\n</code></pre> <p>Then use the first option <code>1. Write system time to RTC</code> in the Witty Pi configuration tool to synchronize the RTC time with the system time.</p> Batteries Unplugged <p>If you unplug both the 3.7V battery and USB-C input (5V battery) from the Witty Pi board, the RTC will not be powered and lose its time. In this case, you will have to synchronize the RTC time with your network time again.</p> </li> <li> <p>Next, we will deactivate Auto-On when USB-C is connected to the Witty Pi.   Type 8 in the Terminal and hit Enter. Select <code>No</code> by typing 0   and hit Enter again:</p> <p></p> </li> <li> <p>Type <code>11</code> and hit Enter to go to <code>11. View/change other settings...</code></p> </li> <li> <p>Type <code>2</code> and hit Enter to change the power cut delay time after shutdown.   Type in <code>25</code> which is the maximum allowed value and hit Enter:</p> <p></p> </li> <li> <p>Back in the main menu, type <code>13</code> and hit Enter to exit the Witty Pi configuration.</p> </li> </ul> <p>Now that the Witty Pi 4 L3V7 is configured, we can set up scheduling of automatic startup and shutdown times. This is done with <code>.wpi</code> schedule files containing a custom ON/OFF sequence. In the <code>wittypi/schedules</code> directory you can find some example schedule scripts.</p> <p>Start with creating a <code>BEGIN</code> and <code>END</code> date + time that will define the duration of your loop, which will continue as long as the current time is between the <code>BEGIN</code> and <code>END</code> time of the schedule script. Add your first <code>ON</code> state and how long it should last. Use <code>D</code> to set the number of days, <code>H</code> for hours, <code>M</code> for minutes and <code>S</code> for seconds.</p> <p>Add <code>WAIT</code> after the duration of an <code>ON</code> state to trigger the shutdown externally (e.g. shutdown command at end of Python script). In this case, the end of the <code>ON</code> state will not automatically trigger a shutdown but is required to calculate the duration of the next <code>OFF</code> state.</p> <p>To activate your schedule script, run the Witty Pi 4 configuration tool:</p> <pre><code>wittypi/wittyPi.sh\n</code></pre> <p>Type <code>6</code> and hit Enter to <code>Choose schedule script</code>. We are selecting the example script that will turn on the Raspberry Pi every day at 9, 12, 15 and 18 o'clock.</p> <p></p> <p>After choosing the schedule script, it will be copied to <code>wittypi/schedule.wpi</code> and the <code>wittypi/schedule.log</code> file will start logging startup/shutdown events.</p> <p>You can also use the Witty Pi Schedule Script Generator to create your schedule script with a visual feedback and the option to run a preview of the scheduling behaviour. You can find more information in chapter 9 of the Witty Pi 4 L3V7 User Manual: About Schedule Script.</p>"},{"location":"software/pisetup/#configure-pijuice-zero","title":"Configure PiJuice Zero","text":"<p>Install the PiJuice software by running:</p> <pre><code>sudo apt install pijuice-base\n</code></pre> <p>When you are asked if you want to continue, confirm with Y+Enter.</p> <p>After the installation you can check if the PiJuice Zero is correctly detected by running:</p> <pre><code>sudo i2cdetect -y 1\n</code></pre> <p>If you see an entry at address <code>14</code> and <code>68</code>, the connection to the PiJuice is now established.</p> <p></p> <p>From now on we want to use the built-in RTC of the PiJuice Zero board as primary hardware clock to wake up the Raspberry Pi at specific times when it is not connected to the internet. For this, we will have to manually load the RTC driver at each boot by modifying the <code>config.txt</code> file:</p> <pre><code>sudo nano /boot/firmware/config.txt\n</code></pre> <p>Add the following lines at the end of the text file:</p> <pre><code># Load PiJuice RTC driver at boot\ndtoverlay=i2c-rtc,ds1307=1\n</code></pre> <p>Exit the editor with Ctrl+X and save the changes with Y+Enter.</p> <p></p> <p>Reboot the Raspberry Pi:</p> <pre><code>sudo reboot\n</code></pre> <p>After the reboot run:</p> <pre><code>sudo i2cdetect -y 1\n</code></pre> <p>You should now see <code>UU</code> at address 68, which means that the RTC driver was successfully loaded and the PiJuice RTC will now be used as hardware clock.</p> <p></p> <p>You can check if the date and time is correct with:</p> <pre><code>sudo hwclock -r\n</code></pre> <p>We will now configure the PiJuice Zero through its command line interface by running:</p> <pre><code>pijuice_cli\n</code></pre> <p></p> <ul> <li>Start with checking if the firmware is up to date by going to the <code>Firmware</code>   tab (use the arrow keys to navigate). If there is a new version available,   <code>Update</code> the firmware.</li> <li>Next, go to the <code>Battery profile</code> tab and check if the correct profile is   selected. If you are using the 12,000 mAh battery, this should be   <code>PJLIPO_12000</code>. Scroll down and change <code>Temperature sense</code> to <code>NTC</code>.   This will make sure that the battery temperature is correctly estimated.   Save the changed settings with <code>Apply settings</code>.</li> <li> <p>Go to the <code>System Task</code> tab, activate <code>Software Halt Power Off</code> and set the   <code>Delay period [seconds]</code> to <code>20</code>. With this setting activated, the power to   the Raspberry Pi will be cut off 20 seconds after a software shutdown has   occured. This will make sure that the OS can complete the shutdown process   without potential SD card corruption.</p> <p></p> </li> <li> <p>Optional: Depending on your hardware setup, under the <code>Battery profile</code> tab   you could decrease the <code>Termination current [mA]</code> to e.g. <code>100</code> if you are   using a solar panel as direct input into the PiJuice Zero   (Minimal Setup   without Voltaic battery).</p> </li> </ul> <p>The most important settings are now applied. You can get a lot more information about all of the other settings at the PiJuice GitHub repo.</p> <p>In the last step, we will set the <code>Wakeup Alarm</code> to specified times to fully automate the camera trap recordings. The PiJuice wakeup alarm clock is set in UTC time, so you have to convert the wake-up times to your time zone (in our case UTC+2). As you can see in the example below, we set our Wakeup Alarm to <code>Every day</code> at <code>Hour</code> <code>7;10;13;16</code> UTC time, which means that the PiJuice will wake up the Raspberry Pi everyday at 9, 12, 15 and 18 o'clock (UTC+2). Activate <code>Wakeup enabled</code> and press <code>Set alarm</code> to save your specified wake-up times.</p> <p></p> <p>During summer it might make sense to not record around noon, as many insects are not active during the hottest daytime. Also the temperature in the camera trap enclosure will be lower if the RPi and OAK-1 are not running, which can increase the charging efficiency of the batteries.</p>"},{"location":"software/pisetup/#install-software","title":"Install Software","text":"<p>Install all dependencies/packages and automatically run the required setup steps:</p> <pre><code>wget -qO- https://raw.githubusercontent.com/maxsitt/insect-detect/main/insect_detect_install.sh | bash\n</code></pre> <p>Optional: Install and configure Rclone if you want to use the upload feature:</p> <pre><code>wget -qO- https://rclone.org/install.sh | sudo bash\n</code></pre> <p>Your system is all set up and ready to go now! Run the scripts with the Python interpreter from the virtual environment:</p> <pre><code>env_insdet/bin/python3 insect-detect/webapp.py\n</code></pre> <p>Check the Usage instructions for more details about the software and how to use it.</p> <ul> <li>More information about setting up the OAK camera and DepthAI can be found at the   Luxonis Docs.</li> <li>If you want to learn more about the DepthAI software, check out the   Software Documentation.</li> <li>For OAK-specific problems, get support in the   Luxonis Forum or post an issue   to the <code>depthai-python</code> repo.</li> </ul>"},{"location":"software/pisetup/#update-software","title":"Update Software","text":"<p>As the software for the Insect Detect camera trap is still under continuous development, it is recommended to update it regularly. The provided update script will create backups of all your config files, handle your local changes and give you instructions in the case of merge conflicts.</p> <p>Update the <code>insect-detect</code> software by running:</p> <pre><code>bash insect-detect/insect_detect_update.sh\n</code></pre>"},{"location":"software/usage/","title":"Usage","text":""},{"location":"software/usage/#usage","title":"Usage","text":""},{"location":"software/usage/#wi-fi-vs-rpi-hotspot","title":"Wi-Fi vs RPi Hotspot","text":"<p>To connect to the Raspberry Pi via SSH or open the web app in a browser, both your device and the RPi need to be connected to the same network. You have three main options:</p> <ol> <li>Wi-Fi network that both your device and the RPi are connected to.</li> <li>Hotspot from your device that the RPi is connected to.</li> <li>Hotspot from the RPi that your device is connected to.</li> </ol> <p>The RPi can usually only be used either as wireless client (connects to network with internet access) or as access point (creates own hotspot without internet access). For an unsupported experimental workaround, check the RaspAP Docs.</p> <p>If you don't need internet access on your RPi (e.g. during fieldwork), there are some advantages of letting the RPi create a hotspot: Any device can connect to it and open the web app, which can be useful if multiple people want to set up camera traps in the field. Also this option is more reliable than letting the RPi connect to a hotspot from your device (every device is different!).</p> <p>With the default <code>startup</code> configuration, the RPi will automatically start a hotspot as fallback mechanism when no configured Wi-Fi network is available (SSID and password = hostname).</p>"},{"location":"software/usage/#web-app","title":"Web App","text":"<p>With the web app, you can view the OAK camera live stream including detected and tracked insects in the browser-based user interface (based on NiceGUI). It also allows real-time camera control (e.g. setting manual focus) and customization of all configuration parameters, as well as selecting the active config that is used by both the web app and the recording script. When using the web app in the field while setting up your camera trap, you can also save deployment metadata, such as location and background setting. The <code>Advanced</code> section includes current system info (e.g. temperature, CPU/RAM usage) and viewing of log files.</p> <p>Run the <code>webapp.py</code> script with the Python interpreter from the virtual environment where you installed the required packages (e.g. <code>env_insdet</code>):</p> <pre><code>env_insdet/bin/python3 insect-detect/webapp.py\n</code></pre> <p>Use one of the links that is shown in the Terminal to open the web app in your browser. If the hostname-based link does not work, use the IP address instead. Always use the link with the IP address if your device is connected to the RPi hotspot, this should be <code>http://10.42.0.1:5000</code> if not using https, or <code>https://10.42.0.1:8443</code> if https is enabled.</p> <p>Stop the web app with the <code>Stop App</code> button or by pressing Ctrl+C in the Terminal.</p>"},{"location":"software/usage/#recording-script","title":"Recording Script","text":"<p>The recording script can be used for fully automated insect monitoring in autonomous camera trap deployments. All configuration parameters can be customized in the web app or by directly modifying the <code>config_custom.yaml</code> file. You can generate multiple custom configuration files and select the active config either in the web app or by modifying the <code>config_selector.yaml</code>.</p> <p>Run the <code>trigger_capture.py</code> script with the Python interpreter from the virtual environment where you installed the required packages (e.g. <code>env_insdet</code>):</p> <pre><code>env_insdet/bin/python3 insect-detect/trigger_capture.py\n</code></pre> <p>Stop the script by pressing Ctrl+C in the Terminal.</p>"},{"location":"software/usage/#processing-pipeline","title":"Processing Pipeline","text":"<ul> <li>A custom YOLO insect detection model is run in real time on device (OAK)   and uses a continuous stream of downscaled LQ frames as input.</li> <li>An object tracker uses the bounding box coordinates of detected insects   to assign a unique tracking ID to each individual present in the frame and   track its movement through time.</li> <li>The tracker + model output from inference on LQ frames is synchronized with   MJPEG-encoded HQ frames (default: 3840x2160 px) on device (OAK).</li> <li>The HQ frames are saved to the microSD card at the configured   capture intervals while an insect is detected (triggered capture)   and independent of detections (time-lapse capture).</li> <li>Corresponding metadata from the detection model and tracker output   is saved to a metadata .csv file for each detected and tracked insect   (including timestamp, label, confidence score, tracking ID, tracking status   and bounding box coordinates).</li> <li>The bounding box coordinates can be used to crop detected insects from   the corresponding HQ frames and save them as individual .jpg images.   Depending on the post-processing configuration, the original HQ frames are   optionally deleted to save storage space.</li> <li>If a power management board (Witty Pi 4 L3V7 or PiJuice Zero) is connected and   enabled in the configuration, intelligent power management is activated which   includes battery charge level monitoring with conditional recording durations.</li> <li>With the default configuration, running the recording consumes ~3.8 W of power.</li> </ul> <p>Depending on the specific requirements of your field deployment, different behaviours can be configured in the <code>startup</code> settings that are run after each boot:</p>"},{"location":"software/usage/#use-case-1-interactive","title":"Use Case 1: Interactive","text":"<p>If you deploy the camera trap for only one recording session, e.g. while doing other field work in parallel, you might want to just run the web app automatically after boot to save deployment metadata and/or modify configuration parameters. Click the <code>Start Rec</code> button in the web app after everything is set up to start the recording script manually.</p> <pre><code>startup:\n  hotspot_setup:\n    enabled: true  # Create RPi Wi-Fi hotspot if it doesn't exist (uses hostname for SSID and password)\n  network_setup:\n    enabled: true  # Create/update all configured Wi-Fi networks in NetworkManager (including hotspot)\n  auto_run:\n    enabled: true       # Automatically run configured Python script(s) after boot\n    primary: webapp.py  # Primary Python script in \"insect-detect\" directory that is run first\n    fallback:           # Fallback Python script in \"insect-detect\" directory (can be empty)\n    delay: 180          # Wait time (seconds) before stopping primary script and running fallback script\n</code></pre>"},{"location":"software/usage/#use-case-2-autonomous","title":"Use Case 2: Autonomous","text":"<p>For long-term field deployment, you want to run the recording script <code>trigger_capture.py</code> automatically after each boot. Please make sure to modify and save all relevant configuration parameters either beforehand or when setting up the camera trap.</p> <pre><code>startup:\n  hotspot_setup:\n    enabled: true  # Create RPi Wi-Fi hotspot if it doesn't exist (uses hostname for SSID and password)\n  network_setup:\n    enabled: true  # Create/update all configured Wi-Fi networks in NetworkManager (including hotspot)\n  auto_run:\n    enabled: true                # Automatically run configured Python script(s) after boot\n    primary: trigger_capture.py  # Primary Python script in \"insect-detect\" directory that is run first\n    fallback:                    # Fallback Python script in \"insect-detect\" directory (can be empty)\n    delay: 180                   # Wait time (seconds) before stopping primary script and running fallback script\n</code></pre>"},{"location":"software/usage/#use-case-3-hybrid","title":"Use Case 3: Hybrid","text":"<p>There might be scenarios where you want to optionally connect to the web app after a scheduled wake-up time, e.g. to modify settings or check log files. For this use case, you can set <code>webapp.py</code> as <code>primary</code> auto-run script and <code>trigger_capture.py</code> as <code>fallback</code> script. If no user interaction (opening the web app in your browser) is detected for the configured <code>delay</code> time, the web app will be terminated and the recording script will be started automatically.</p> <pre><code>startup:\n  hotspot_setup:\n    enabled: true  # Create RPi Wi-Fi hotspot if it doesn't exist (uses hostname for SSID and password)\n  network_setup:\n    enabled: true  # Create/update all configured Wi-Fi networks in NetworkManager (including hotspot)\n  auto_run:\n    enabled: true                 # Automatically run configured Python script(s) after boot\n    primary: webapp.py            # Primary Python script in \"insect-detect\" directory that is run first\n    fallback: trigger_capture.py  # Fallback Python script in \"insect-detect\" directory (can be empty)\n    delay: 180                    # Wait time (seconds) before stopping primary script and running fallback script\n</code></pre>"},{"location":"software/usage/#troubleshooting","title":"Troubleshooting","text":"<p>If you run into any problems while using the <code>insect-detect</code> software, please create an issue.</p> RuntimeError: X_LINK_DEVICE_ALREADY_IN_USE <pre><code>RuntimeError: Failed to connect to device, error message: X_LINK_DEVICE_ALREADY_IN_USE\n</code></pre> <p>If you run into the error shown above, the most common cause is that a previously started script is already communicating with the OAK camera. Show all running processes by starting the process manager htop:</p> <pre><code>htop\n</code></pre> <p>If you see one of the Python scripts in the list of processes, you can hit F9 with the script selected. This will open the <code>SIGTERM</code> option and by confirming with Enter the process will be stopped. Close htop by pressing Q and you should now be able to connect to the OAK camera again.</p> Couldn't read data from stream: 'frame' (X_LINK_ERROR) <pre><code>RuntimeError: Communication exception - possible device error/misconfiguration. Original message 'Couldnt read data from stream: 'frame' (X_LINK_ERROR)'\n</code></pre> <p>If you run into the error shown above, the most common cause is a loose USB cable between OAK camera and Raspberry Pi. Other reasons can be a damaged cable or Micro-USB adapter. Please make sure to exclude these reasons, e.g. by testing a different cable and/or adapter.</p>"}]}